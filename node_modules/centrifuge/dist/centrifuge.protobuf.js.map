{
  "version": 3,
  "sources": ["../node_modules/events/events.js", "../node_modules/@protobufjs/aspromise/index.js", "../node_modules/@protobufjs/base64/index.js", "../node_modules/@protobufjs/eventemitter/index.js", "../node_modules/@protobufjs/float/index.js", "../node_modules/@protobufjs/inquire/index.js", "../node_modules/@protobufjs/utf8/index.js", "../node_modules/@protobufjs/pool/index.js", "../node_modules/protobufjs/src/util/longbits.js", "../node_modules/protobufjs/src/util/minimal.js", "../node_modules/protobufjs/src/writer.js", "../node_modules/protobufjs/src/writer_buffer.js", "../node_modules/protobufjs/src/reader.js", "../node_modules/protobufjs/src/reader_buffer.js", "../node_modules/protobufjs/src/rpc/service.js", "../node_modules/protobufjs/src/rpc.js", "../node_modules/protobufjs/src/roots.js", "../node_modules/protobufjs/src/index-minimal.js", "../node_modules/@protobufjs/codegen/index.js", "../node_modules/@protobufjs/fetch/index.js", "../node_modules/@protobufjs/path/index.js", "../node_modules/protobufjs/src/types.js", "../node_modules/protobufjs/src/field.js", "../node_modules/protobufjs/src/oneof.js", "../node_modules/protobufjs/src/namespace.js", "../node_modules/protobufjs/src/mapfield.js", "../node_modules/protobufjs/src/method.js", "../node_modules/protobufjs/src/service.js", "../node_modules/protobufjs/src/message.js", "../node_modules/protobufjs/src/decoder.js", "../node_modules/protobufjs/src/verifier.js", "../node_modules/protobufjs/src/converter.js", "../node_modules/protobufjs/src/wrappers.js", "../node_modules/protobufjs/src/type.js", "../node_modules/protobufjs/src/root.js", "../node_modules/protobufjs/src/util.js", "../node_modules/protobufjs/src/object.js", "../node_modules/protobufjs/src/enum.js", "../node_modules/protobufjs/src/encoder.js", "../node_modules/protobufjs/src/index-light.js", "../node_modules/protobufjs/light.js", "../src/subscription.ts", "../src/codes.ts", "../src/types.ts", "../src/utils.ts", "../src/transport_sockjs.ts", "../src/transport_websocket.ts", "../src/transport_http_stream.ts", "../src/transport_sse.ts", "../src/transport_webtransport.ts", "../src/json.ts", "../src/centrifuge.ts", "../src/protobuf/index.ts", "../src/protobuf/browser.ts"],
  "sourcesContent": ["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n", "\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n", "\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n", "\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n", "\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n", "\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n", "\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n", "\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n", "\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n", "\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n", "\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n", "\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n", "\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n", "\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n", "\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n", "\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n", "\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n", "\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    if (rule === \"proto3_optional\") {\n        rule = \"optional\";\n    }\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n", "\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n", "\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    OneOf    = require(\"./oneof\"),\n    util     = require(\"./util\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\n */\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace || object instanceof OneOf))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n", "\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n", "\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n", "\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n", "\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/", "\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i:\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\");\n    // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n", "\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}", "\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\n                (\"default:\");\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n", "\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].substr(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.substr(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n", "\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n", "\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        var cb = callback;\n        callback = null;\n        if (sync)\n            throw err;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n", "\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (part === \"__proto__\") {\n          return dst;\n        }\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n", "\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n", "\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n */\nfunction Enum(name, values, options, comment, comments) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"  , this.options,\n        \"values\"   , this.values,\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"  , keepComments ? this.comment : undefined,\n        \"comments\" , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n", "\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n", "\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n", "// light library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-light\");", "import EventEmitter from 'events';\nimport { Centrifuge } from './centrifuge';\nimport { errorCodes, unsubscribedCodes, subscribingCodes, connectingCodes } from './codes';\nimport {\n  HistoryOptions, HistoryResult, PresenceResult, PresenceStatsResult,\n  PublishResult, State, SubscriptionEvents, SubscriptionOptions,\n  SubscriptionState, SubscriptionTokenContext, TypedEventEmitter\n} from './types';\nimport { ttlMilliseconds, backoff } from './utils';\n\n/** Subscription to a channel */\nexport class Subscription extends (EventEmitter as new () => TypedEventEmitter<SubscriptionEvents>) {\n  channel: string;\n  state: SubscriptionState;\n\n  private _centrifuge: Centrifuge;\n  private _promises: Record<number, any>;\n  private _resubscribeTimeout?: null | ReturnType<typeof setTimeout> = null;\n  private _refreshTimeout?: null | ReturnType<typeof setTimeout> = null;\n  private _getToken: null | ((ctx: SubscriptionTokenContext) => Promise<string>);\n  private _minResubscribeDelay: number;\n  private _maxResubscribeDelay: number;\n  private _recover: boolean;\n  private _offset: number | null;\n  private _epoch: string | null;\n  private _resubscribeAttempts: number;\n  private _promiseId: number;\n\n  private _token: string | null;\n  private _data: any | null;\n  private _recoverable: boolean;\n  private _positioned: boolean;\n  private _joinLeave: boolean;\n  // @ts-ignore \u2013 this is used by a client in centrifuge.ts.\n  private _inflight: boolean;\n\n  /** Subscription constructor should not be used directly, create subscriptions using Client method. */\n  constructor(centrifuge: Centrifuge, channel: string, options?: Partial<SubscriptionOptions>) {\n    super();\n    this.channel = channel;\n    this.state = SubscriptionState.Unsubscribed;\n    this._centrifuge = centrifuge;\n    this._token = null;\n    this._getToken = null;\n    this._data = null;\n    this._recover = false;\n    this._offset = null;\n    this._epoch = null;\n    this._recoverable = false;\n    this._positioned = false;\n    this._joinLeave = false;\n    this._minResubscribeDelay = 500;\n    this._maxResubscribeDelay = 20000;\n    this._resubscribeTimeout = null;\n    this._resubscribeAttempts = 0;\n    this._promises = {};\n    this._promiseId = 0;\n    this._inflight = false;\n    this._refreshTimeout = null;\n    this._setOptions(options);\n    // @ts-ignore \u2013 we are hiding some symbols from public API autocompletion.\n    if (this._centrifuge._debugEnabled) {\n      this.on('state', (ctx) => {\n        // @ts-ignore \u2013 we are hiding some symbols from public API autocompletion.\n        this._centrifuge._debug('subscription state', channel, ctx.oldState, '->', ctx.newState);\n      });\n      this.on('error', (ctx) => {\n        // @ts-ignore \u2013 we are hiding some symbols from public API autocompletion.\n        this._centrifuge._debug('subscription error', channel, ctx);\n      });\n    } else {\n      // Avoid unhandled exception in EventEmitter for non-set error handler.\n      this.on('error', function () { Function.prototype(); });\n    }\n  }\n\n  /** ready returns a Promise which resolves upon subscription goes to Subscribed \n   * state and rejects in case of subscription goes to Unsubscribed state. \n   * Optional timeout can be passed.*/\n  ready(timeout?: number): Promise<void> {\n    if (this.state === SubscriptionState.Unsubscribed) {\n      return Promise.reject({ code: errorCodes.subscriptionUnsubscribed, message: this.state });\n    }\n    if (this.state === SubscriptionState.Subscribed) {\n      return Promise.resolve();\n    }\n    return new Promise((res, rej) => {\n      const ctx: any = {\n        resolve: res,\n        reject: rej\n      };\n      if (timeout) {\n        ctx.timeout = setTimeout(function () {\n          rej({ code: errorCodes.timeout, message: 'timeout' });\n        }, timeout);\n      }\n      this._promises[this._nextPromiseId()] = ctx;\n    });\n  }\n\n  /** subscribe to a channel.*/\n  subscribe() {\n    if (this._isSubscribed()) {\n      return;\n    }\n    this._resubscribeAttempts = 0;\n    this._setSubscribing(subscribingCodes.subscribeCalled, 'subscribe called');\n  }\n\n  /** unsubscribe from a channel, keeping position state.*/\n  unsubscribe() {\n    this._setUnsubscribed(unsubscribedCodes.unsubscribeCalled, 'unsubscribe called', true);\n  }\n\n  /** publish data to a channel.*/\n  publish(data: any): Promise<PublishResult> {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.publish(self.channel, data);\n    });\n  }\n\n  /** get online presence for a channel.*/\n  presence(): Promise<PresenceResult> {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.presence(self.channel);\n    });\n  }\n\n  /** presence stats for a channel (num clients and unique users).*/\n  presenceStats(): Promise<PresenceStatsResult> {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.presenceStats(self.channel);\n    });\n  }\n\n  /** history for a channel. By default it does not return publications (only current\n   *  StreamPosition data) \u2013 provide an explicit limit > 0 to load publications.*/\n  history(opts: HistoryOptions): Promise<HistoryResult> {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.history(self.channel, opts);\n    });\n  }\n\n  private _methodCall(): any {\n    if (this._isSubscribed()) {\n      return Promise.resolve();\n    }\n    if (this._isUnsubscribed()) {\n      return Promise.reject({ code: errorCodes.subscriptionUnsubscribed, message: this.state });\n    }\n    return new Promise((res, rej) => {\n      const timeout = setTimeout(function () {\n        rej({ code: errorCodes.timeout, message: 'timeout' });\n        // @ts-ignore \u2013 we are hiding some symbols from public API autocompletion.\n      }, this._centrifuge._config.timeout);\n      this._promises[this._nextPromiseId()] = {\n        timeout: timeout,\n        resolve: res,\n        reject: rej\n      };\n    });\n  }\n\n  private _nextPromiseId() {\n    return ++this._promiseId;\n  }\n\n  private _needRecover() {\n    return this._recover === true;\n  }\n\n  private _isUnsubscribed() {\n    return this.state === SubscriptionState.Unsubscribed;\n  }\n\n  private _isSubscribing() {\n    return this.state === SubscriptionState.Subscribing;\n  }\n\n  private _isSubscribed() {\n    return this.state === SubscriptionState.Subscribed;\n  }\n\n  private _setState(newState: SubscriptionState) {\n    if (this.state !== newState) {\n      const oldState = this.state;\n      this.state = newState;\n      this.emit('state', { newState, oldState, channel: this.channel });\n      return true;\n    }\n    return false;\n  }\n\n  private _usesToken() {\n    return this._token !== null || this._getToken !== null;\n  }\n\n  private _clearSubscribingState() {\n    this._resubscribeAttempts = 0;\n    this._clearResubscribeTimeout();\n  }\n\n  private _clearSubscribedState() {\n    this._clearRefreshTimeout();\n  }\n\n  private _setSubscribed(result: any) {\n    if (!this._isSubscribing()) {\n      return;\n    }\n    this._clearSubscribingState();\n\n    if (result.recoverable) {\n      this._recover = true;\n      this._offset = result.offset || 0;\n      this._epoch = result.epoch || '';\n    }\n\n    this._setState(SubscriptionState.Subscribed);\n    // @ts-ignore \u2013 we are hiding some methods from public API autocompletion.\n    const ctx = this._centrifuge._getSubscribeContext(this.channel, result);\n    this.emit('subscribed', ctx);\n    this._resolvePromises();\n\n    const pubs = result.publications;\n    if (pubs && pubs.length > 0) {\n      for (const i in pubs) {\n        if (!pubs.hasOwnProperty(i)) {\n          continue;\n        }\n        this._handlePublication(pubs[i]);\n      }\n    }\n\n    if (result.expires === true) {\n      this._refreshTimeout = setTimeout(() => this._refresh(), ttlMilliseconds(result.ttl));\n    }\n  }\n\n  private _setSubscribing(code: number, reason: string) {\n    if (this._isSubscribing()) {\n      return;\n    }\n    if (this._isSubscribed()) {\n      this._clearSubscribedState();\n    }\n    if (this._setState(SubscriptionState.Subscribing)) {\n      this.emit('subscribing', { channel: this.channel, code: code, reason: reason });\n    }\n    this._subscribe(false, false);\n  }\n\n  private _subscribe(optimistic: boolean, skipSending: boolean): any {\n    // @ts-ignore \u2013 we are hiding some symbols from public API autocompletion.\n    this._centrifuge._debug('subscribing on', this.channel);\n\n    if (this._centrifuge.state !== State.Connected && !optimistic) {\n      // @ts-ignore \u2013 we are hiding some symbols from public API autocompletion.\n      this._centrifuge._debug('delay subscribe on', this.channel, 'till connected');\n      // subscribe will be called later automatically.\n      return null;\n    }\n\n    if (this._usesToken()) {\n      // token channel, need to get token before sending subscribe.\n      if (this._token) {\n        return this._sendSubscribe(this._token, skipSending);\n      } else {\n        if (optimistic) {\n          return null;\n        }\n        const self = this;\n        this._getSubscriptionToken().then(function (token) {\n          if (!self._isSubscribing()) {\n            return;\n          }\n          if (!token) {\n            self._failUnauthorized();\n            return;\n          }\n          self._token = token;\n          self._sendSubscribe(token, false);\n        }).catch(function (e) {\n          if (!self._isSubscribing()) {\n            return;\n          }\n          self.emit('error', {\n            type: 'subscribeToken',\n            channel: self.channel,\n            error: {\n              code: errorCodes.subscriptionSubscribeToken,\n              message: e !== undefined ? e.toString() : ''\n            }\n          });\n          self._scheduleResubscribe();\n        });\n        return null;\n      }\n    } else {\n      return this._sendSubscribe('', skipSending);\n    }\n  }\n\n  private _sendSubscribe(token: string, skipSending: boolean): any {\n    const channel = this.channel;\n\n    const req: any = {\n      channel: channel\n    };\n\n    if (token) {\n      req.token = token;\n    }\n\n    if (this._data) {\n      req.data = this._data;\n    }\n\n    if (this._positioned) {\n      req.positioned = true;\n    }\n\n    if (this._recoverable) {\n      req.recoverable = true;\n    }\n\n    if (this._joinLeave) {\n      req.join_leave = true;\n    }\n\n    if (this._needRecover()) {\n      req.recover = true;\n      const offset = this._getOffset();\n      if (offset) {\n        req.offset = offset;\n      }\n      const epoch = this._getEpoch();\n      if (epoch) {\n        req.epoch = epoch;\n      }\n    }\n\n    const cmd = { subscribe: req };\n\n    this._inflight = true;\n\n    // @ts-ignore \u2013 we are hiding some symbols from public API autocompletion.\n    this._centrifuge._call(cmd, skipSending).then(resolveCtx => {\n      this._inflight = false;\n      // @ts-ignore - improve later.\n      const result = resolveCtx.reply.subscribe;\n      this._handleSubscribeResponse(\n        result\n      );\n      // @ts-ignore - improve later.\n      if (resolveCtx.next) {\n        // @ts-ignore - improve later.\n        resolveCtx.next();\n      }\n    }, rejectCtx => {\n      this._inflight = false;\n      this._handleSubscribeError(rejectCtx.error);\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n    });\n    return cmd;\n  }\n\n  private _handleSubscribeError(error) {\n    if (!this._isSubscribing()) {\n      return;\n    }\n    if (error.code === errorCodes.timeout) {\n      // @ts-ignore \u2013 we are hiding some symbols from public API autocompletion.\n      this._centrifuge._disconnect(connectingCodes.subscribeTimeout, 'subscribe timeout', true);\n      return;\n    }\n    this._subscribeError(error);\n  }\n\n  private _handleSubscribeResponse(result) {\n    if (!this._isSubscribing()) {\n      return;\n    }\n    this._setSubscribed(result);\n  }\n\n  private _setUnsubscribed(code, reason, sendUnsubscribe) {\n    if (this._isUnsubscribed()) {\n      return;\n    }\n    if (this._isSubscribed()) {\n      if (sendUnsubscribe) {\n        // @ts-ignore \u2013 we are hiding some methods from public API autocompletion.\n        this._centrifuge._unsubscribe(this);\n      }\n      this._clearSubscribedState();\n    }\n    if (this._isSubscribing()) {\n      this._clearSubscribingState();\n    }\n    if (this._setState(SubscriptionState.Unsubscribed)) {\n      this.emit('unsubscribed', { channel: this.channel, code: code, reason: reason });\n    }\n    this._rejectPromises({ code: errorCodes.subscriptionUnsubscribed, message: this.state });\n  }\n\n  private _handlePublication(pub: any) {\n    // @ts-ignore \u2013 we are hiding some methods from public API autocompletion.\n    const ctx = this._centrifuge._getPublicationContext(this.channel, pub);\n    this.emit('publication', ctx);\n    if (pub.offset) {\n      this._offset = pub.offset;\n    }\n  }\n\n  protected _handleJoin(join: any) {\n    // @ts-ignore \u2013 we are hiding some methods from public API autocompletion.\n    const info = this._centrifuge._getJoinLeaveContext(join.info)\n    this.emit('join', { channel: this.channel, info: info });\n  }\n\n  protected _handleLeave(leave: any) {\n    // @ts-ignore \u2013 we are hiding some methods from public API autocompletion.\n    const info = this._centrifuge._getJoinLeaveContext(leave.info)\n    this.emit('leave', { channel: this.channel, info: info });\n  }\n\n  private _resolvePromises() {\n    for (const id in this._promises) {\n      if (this._promises[id].timeout) {\n        clearTimeout(this._promises[id].timeout);\n      }\n      this._promises[id].resolve();\n      delete this._promises[id];\n    }\n  }\n\n  private _rejectPromises(err: any) {\n    for (const id in this._promises) {\n      if (this._promises[id].timeout) {\n        clearTimeout(this._promises[id].timeout);\n      }\n      this._promises[id].reject(err);\n      delete this._promises[id];\n    }\n  }\n\n  private _scheduleResubscribe() {\n    const self = this;\n    const delay = this._getResubscribeDelay();\n    this._resubscribeTimeout = setTimeout(function () {\n      if (self._isSubscribing()) {\n        self._subscribe(false, false);\n      }\n    }, delay);\n  }\n\n  private _subscribeError(err: any) {\n    if (!this._isSubscribing()) {\n      return;\n    }\n    if (err.code < 100 || err.code === 109 || err.temporary === true) {\n      if (err.code === 109) { // Token expired error.\n        this._token = null;\n      }\n      const errContext = {\n        channel: this.channel,\n        type: 'subscribe',\n        error: err\n      };\n      if (this._centrifuge.state === State.Connected) {\n        this.emit('error', errContext);\n      }\n      this._scheduleResubscribe();\n    } else {\n      this._setUnsubscribed(err.code, err.message, false);\n    }\n  }\n\n  private _getResubscribeDelay() {\n    const delay = backoff(this._resubscribeAttempts, this._minResubscribeDelay, this._maxResubscribeDelay);\n    this._resubscribeAttempts++;\n    return delay;\n  }\n\n  private _setOptions(options: Partial<SubscriptionOptions> | undefined) {\n    if (!options) {\n      return;\n    }\n    if (options.since) {\n      this._offset = options.since.offset;\n      this._epoch = options.since.epoch;\n      this._recover = true;\n    }\n    if (options.data) {\n      this._data = options.data;\n    }\n    if (options.minResubscribeDelay !== undefined) {\n      this._minResubscribeDelay = options.minResubscribeDelay;\n    }\n    if (options.maxResubscribeDelay !== undefined) {\n      this._maxResubscribeDelay = options.maxResubscribeDelay;\n    }\n    if (options.token) {\n      this._token = options.token;\n    }\n    if (options.getToken) {\n      this._getToken = options.getToken;\n    }\n    if (options.positioned === true) {\n      this._positioned = true;\n    }\n    if (options.recoverable === true) {\n      this._recoverable = true;\n    }\n    if (options.joinLeave === true) {\n      this._joinLeave = true;\n    }\n  }\n\n  private _getOffset() {\n    const offset = this._offset;\n    if (offset !== null) {\n      return offset;\n    }\n    return 0;\n  }\n\n  private _getEpoch() {\n    const epoch = this._epoch;\n    if (epoch !== null) {\n      return epoch;\n    }\n    return '';\n  }\n\n  private _clearRefreshTimeout() {\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n  }\n\n  private _clearResubscribeTimeout() {\n    if (this._resubscribeTimeout !== null) {\n      clearTimeout(this._resubscribeTimeout);\n      this._resubscribeTimeout = null;\n    }\n  }\n\n  private _getSubscriptionToken() {\n    // @ts-ignore \u2013 we are hiding some methods from public API autocompletion.\n    this._centrifuge._debug('get subscription token for channel', this.channel);\n    const ctx = {\n      channel: this.channel\n    };\n    const getToken = this._getToken;\n    if (getToken === null) {\n      throw new Error('provide a function to get channel subscription token');\n    }\n    return getToken(ctx);\n  }\n\n  private _refresh() {\n    this._clearRefreshTimeout();\n    const self = this;\n    this._getSubscriptionToken().then(function (token) {\n      if (!self._isSubscribed()) {\n        return;\n      }\n      if (!token) {\n        self._failUnauthorized();\n        return;\n      }\n      self._token = token;\n      const req = {\n        channel: self.channel,\n        token: token\n      };\n      const msg = {\n        'sub_refresh': req\n      };\n      // @ts-ignore \u2013 we are hiding some symbols from public API autocompletion.\n      self._centrifuge._call(msg).then(resolveCtx => {\n        // @ts-ignore - improve later.\n        const result = resolveCtx.reply.sub_refresh;\n        self._refreshResponse(result);\n        // @ts-ignore - improve later.\n        if (resolveCtx.next) {\n          // @ts-ignore - improve later.\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        self._refreshError(rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    }).catch(function (e) {\n      self.emit('error', {\n        type: 'refreshToken',\n        channel: self.channel,\n        error: {\n          code: errorCodes.subscriptionRefreshToken,\n          message: e !== undefined ? e.toString() : ''\n        }\n      });\n      self._refreshTimeout = setTimeout(() => self._refresh(), self._getRefreshRetryDelay());\n    });\n  }\n\n  private _refreshResponse(result: any) {\n    if (!this._isSubscribed()) {\n      return;\n    }\n    // @ts-ignore \u2013 we are hiding some methods from public API autocompletion.\n    this._centrifuge._debug('subscription token refreshed, channel', this.channel);\n    this._clearRefreshTimeout();\n    if (result.expires === true) {\n      this._refreshTimeout = setTimeout(() => this._refresh(), ttlMilliseconds(result.ttl));\n    }\n  }\n\n  private _refreshError(err: any) {\n    if (!this._isSubscribed()) {\n      return;\n    }\n    if (err.code < 100 || err.temporary === true) {\n      this.emit('error', {\n        type: 'refresh',\n        channel: this.channel,\n        error: err\n      });\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getRefreshRetryDelay());\n    } else {\n      this._setUnsubscribed(err.code, err.message, true);\n    }\n  }\n\n  private _getRefreshRetryDelay() {\n    return backoff(0, 10000, 20000);\n  }\n\n  private _failUnauthorized() {\n    this._setUnsubscribed(unsubscribedCodes.unauthorized, 'unauthorized', true);\n  }\n}\n", "export const errorCodes = {\n  timeout: 1,\n  transportClosed: 2,\n  clientDisconnected: 3,\n  clientClosed: 4,\n  clientConnectToken: 5,\n  clientRefreshToken: 6,\n  subscriptionUnsubscribed: 7,\n  subscriptionSubscribeToken: 8,\n  subscriptionRefreshToken: 9,\n  transportWriteError: 10,\n  connectionClosed: 11\n};\n\nexport const connectingCodes = {\n  connectCalled: 0,\n  transportClosed: 1,\n  noPing: 2,\n  subscribeTimeout: 3,\n  unsubscribeError: 4\n};\n\nexport const disconnectedCodes = {\n  disconnectCalled: 0,\n  unauthorized: 1,\n  badProtocol: 2,\n  messageSizeLimit: 3\n};\n\nexport const subscribingCodes = {\n  subscribeCalled: 0,\n  transportClosed: 1\n};\n\nexport const unsubscribedCodes = {\n  unsubscribeCalled: 0,\n  unauthorized: 1,\n  clientClosed: 2\n};\n", "/** EventMap */\nexport type EventMap = {\n  [key: string]: (...args: any[]) => void\n}\n\n/** Typed event emitter. */\nexport interface TypedEventEmitter<Events extends EventMap> {\n  addListener<E extends keyof Events>(event: E, listener: Events[E]): this\n  on<E extends keyof Events>(event: E, listener: Events[E]): this\n  once<E extends keyof Events>(event: E, listener: Events[E]): this\n  prependListener<E extends keyof Events>(event: E, listener: Events[E]): this\n  prependOnceListener<E extends keyof Events>(event: E, listener: Events[E]): this\n  off<E extends keyof Events>(event: E, listener: Events[E]): this\n  removeAllListeners<E extends keyof Events>(event?: E): this\n  removeListener<E extends keyof Events>(event: E, listener: Events[E]): this\n  emit<E extends keyof Events>(event: E, ...args: Parameters<Events[E]>): boolean\n  rawListeners<E extends keyof Events>(event: E): Events[E][]\n  listeners<E extends keyof Events>(event: E): Events[E][]\n}\n\n/** Client events which can be emitted. */\nexport type ClientEvents = {\n  state: (ctx: StateContext) => void;\n  connecting: (ctx: ConnectingContext) => void;\n  connected: (ctx: ConnectedContext) => void;\n  disconnected: (ctx: DisconnectedContext) => void;\n\n  // Async message coming from a server.\n  message: (ctx: MessageContext) => void;\n  // Listen to errors happening internally. \n  error: (ctx: ErrorContext) => void;\n\n  // Listen for server-side subscription events.\n  subscribed: (ctx: ServerSubscribedContext) => void;\n  subscribing: (ctx: ServerSubscribingContext) => void;\n  unsubscribed: (ctx: ServerUnsubscribedContext) => void;\n  publication: (ctx: ServerPublicationContext) => void;\n  join: (ctx: ServerJoinContext) => void;\n  leave: (ctx: ServerLeaveContext) => void;\n}\n\n/** State of client. */\nexport enum State {\n  Disconnected = \"disconnected\",\n  Connecting = \"connecting\",\n  Connected = \"connected\"\n}\n\n/** Events of Subscription. */\nexport type SubscriptionEvents = {\n  state: (ctx: SubscriptionStateContext) => void;\n  subscribing: (ctx: SubscribingContext) => void;\n  subscribed: (ctx: SubscribedContext) => void;\n  unsubscribed: (ctx: UnsubscribedContext) => void;\n\n  publication: (ctx: PublicationContext) => void;\n  join: (ctx: JoinContext) => void;\n  leave: (ctx: LeaveContext) => void;\n\n  // listen to errors happening internally. \n  error: (ctx: SubscriptionErrorContext) => void;\n}\n\n/** State of Subscription */\nexport enum SubscriptionState {\n  Unsubscribed = \"unsubscribed\",\n  Subscribing = \"subscribing\",\n  Subscribed = \"subscribed\"\n}\n\nexport type TransportName = 'websocket' | 'http_stream' | 'sse' | 'sockjs' | 'webtransport';\n\n/** TransportEndpoint allows configuring transport when using fallback mode */\nexport interface TransportEndpoint {\n  /** transport to use */\n  transport: TransportName;\n  /** endpoint for a selected transport type */\n  endpoint: string;\n}\n\n/** Options for Centrifuge client. */\nexport interface Options {\n  /** select protocol to use. Note that to use Protobuf protocol you need to use \n   * CentrifugeProtobuf class. */\n  protocol: 'json' | 'protobuf';\n  /** allows enabling debug mode */\n  debug: boolean;\n  /** allows setting connection token (JWT) */\n  token: string | null;\n  /** allows setting function to get/refresh connection token */\n  getToken: null | ((ctx: ConnectionTokenContext) => Promise<string>);\n  /** data to send to a server with connect command */\n  data: any | null;\n  /** name of client - it's not a unique name of each connection, it's sth to identify\n   * from where client connected */\n  name: string;\n  /** version of client */\n  version: string;\n  /** minimum delay between reconnect attempts in milliseconds */\n  minReconnectDelay: number;\n  /** maximum delay between reconnect attempts in milliseconds */\n  maxReconnectDelay: number;\n  /** timeout for operations in milliseconds */\n  timeout: number;\n  /** maximum delay of server pings to detect broken connection in milliseconds */\n  maxServerPingDelay: number;\n  /** provide custom WebSocket constructor, useful for NodeJS env where WebSocket is not\n   * available globally */\n  websocket: any | null;\n  /** provide shim for fetch implementation */\n  fetch: any | null;\n  /** provide shim for ReadableStream */\n  readableStream: any | null;\n  /** provide shim for EventSource object */\n  eventsource: any | null;\n  /** provide shim for SockJS object */\n  sockjs: any | null;\n  /** allows modifying options passed to SockJS constructor */\n  sockjsOptions: SockjsOptions;\n  /** which emulation endpoint to use */\n  emulationEndpoint: string;\n  /** EventTarget for network online/offline events, in browser environment \n   * Centrifuge uses global window online/offline events automatically\n   * by default. */\n  networkEventTarget: EventTarget | null;\n}\n\nexport interface SockjsOptions {\n  transports?: string[];\n  timeout?: number;\n}\n\nexport interface StateContext {\n  newState: State;\n  oldState: State;\n}\n\nexport interface ConnectedContext {\n  client: string;\n  transport: string;\n  data?: any;\n}\n\nexport interface ErrorContext {\n  type: string;\n  error: Error;\n  transport?: string;\n}\n\nexport interface Error {\n  code: number;\n  message: string;\n}\n\nexport interface ConnectingContext {\n  code: number;\n  reason: string;\n}\n\nexport interface DisconnectedContext {\n  code: number;\n  reason: string;\n}\n\nexport interface MessageContext {\n  data: any;\n}\n\nexport interface PublicationContext {\n  channel: string;\n  data: any;\n  info?: ClientInfo;\n  offset?: number;\n  tags?: Map<string, string>;\n}\n\nexport interface ClientInfo {\n  client: string;\n  user: string;\n  connInfo?: any;\n  chanInfo?: any;\n}\n\nexport interface JoinContext {\n  channel: string;\n  info: ClientInfo;\n}\n\nexport interface LeaveContext {\n  channel: string;\n  info: ClientInfo;\n}\n\nexport interface SubscriptionStateContext {\n  channel: string;\n  newState: SubscriptionState;\n  oldState: SubscriptionState;\n}\n\nexport interface ServerSubscribedContext {\n  /** channel of Subscription. */\n  channel: string;\n  /** Subscription is recoverable \u2013 i.e. can automatically recover missed messages */\n  recoverable: boolean;\n  /** Subscription is positioned \u2013 i.e. server tracks message loss on the way from PUB/SUB broker */\n  positioned: boolean;\n  /** streamPosition set when Subscription is recoverable or positioned. */\n  streamPosition?: StreamPosition;\n  /** wasRecovering is true when recovery was used in subscribe request. */\n  wasRecovering: boolean;\n  /** whether or not missed publications may be successfully recovered.  */\n  recovered: boolean;\n  /** custom data for Subscription returned from server. */\n  data?: any;\n}\n\nexport interface SubscribedContext {\n  channel: string;\n  recoverable: boolean;\n  positioned: boolean;\n  streamPosition?: StreamPosition;\n  wasRecovering: boolean;\n  recovered: boolean;\n  data?: any;\n}\n\nexport interface SubscriptionErrorContext {\n  channel: string;\n  type: string;\n  error: Error;\n}\n\nexport interface UnsubscribedContext {\n  channel: string;\n  code: number;\n  reason: string;\n}\n\nexport interface ServerPublicationContext {\n  channel: string;\n  data: any;\n  info?: ClientInfo;\n  offset?: number;\n  tags?: Map<string, string>;\n}\n\nexport interface ServerJoinContext {\n  channel: string;\n  info: ClientInfo;\n}\n\nexport interface ServerLeaveContext {\n  channel: string;\n  info: ClientInfo;\n}\n\nexport interface ServerUnsubscribedContext {\n  channel: string;\n}\n\nexport interface SubscribingContext {\n  channel: string;\n  code: number;\n  reason: string;\n}\n\nexport interface ServerSubscribingContext {\n  channel: string;\n}\n\nexport interface ConnectionTokenContext {\n}\n\nexport interface SubscriptionTokenContext {\n  channel: string;\n}\n\nexport interface PublishResult {\n}\n\nexport interface RpcResult {\n  data: any;\n}\n\nexport interface PresenceResult {\n  clients: Map<string, ClientInfo>;\n}\n\nexport interface PresenceStatsResult {\n  numClients: number;\n  numUsers: number;\n}\n\nexport interface HistoryResult {\n  publications: PublicationContext[];\n  offset: number;\n  epoch: string;\n}\n\nexport interface HistoryOptions {\n  limit?: number;\n  since?: StreamPosition;\n  reverse?: boolean;\n}\n\n/** SubscriptionOptions can customize Subscription. */\nexport interface SubscriptionOptions {\n  /** allows setting subscription token (JWT) */\n  token: string | null;\n  /** allows setting function to get/refresh subscription token */\n  getToken: null | ((ctx: SubscriptionTokenContext) => Promise<string>);\n  /** data to send to a server with subscribe command */\n  data: any | null;\n  /** force recovery on first subscribe from a provided StreamPosition. */\n  since: StreamPosition | null;\n  /** min delay between resubscribe attempts. */\n  minResubscribeDelay: number;\n  /** max delay between resubscribe attempts. */\n  maxResubscribeDelay: number;\n  /** ask server to make subscription positioned. */\n  positioned: boolean;\n  /** ask server to make subscription recoverable. */\n  recoverable: boolean;\n  /** ask server to send join/leave messages. */\n  joinLeave: boolean;\n}\n\n/** Stream postion describes position of publication inside a stream.  */\nexport interface StreamPosition {\n  offset: number;\n  epoch: string;\n}\n", "/** @internal */\nexport function startsWith(value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n}\n\n/** @internal */\nexport function isFunction(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n}\n\n/** @internal */\nexport function log(level, args) {\n  if (globalThis.console) {\n    const logger = globalThis.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(globalThis.console, args);\n    }\n  }\n}\n\nfunction randomInt(min: number, max: number) { // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/** @internal */\nexport function backoff(step: number, min: number, max: number) {\n  // Full jitter technique, see:\n  // https://aws.amazon.com/blogs/architecture/exponential-backoff-and-jitter/\n  if (step > 31) { step = 31; }\n  const interval = randomInt(0, Math.min(max, min * Math.pow(2, step)));\n  return Math.min(max, min + interval);\n}\n\n/** @internal */\nexport function errorExists(data: any) {\n  return 'error' in data && data.error !== null;\n}\n\n/** @internal */\nexport function ttlMilliseconds(ttl: number) {\n  // https://stackoverflow.com/questions/12633405/what-is-the-maximum-delay-for-setinterval\n  return Math.min(ttl * 1000, 2147483647);\n}\n", "/** @internal */\nexport class SockjsTransport {\n  endpoint: string;\n  options: any;\n  _transport: any;\n\n  constructor(endpoint: string, options: any) {\n    this.endpoint = endpoint;\n    this.options = options;\n    this._transport = null;\n  }\n\n  name() {\n    return 'sockjs';\n  }\n\n  subName() {\n    return 'sockjs-' + this._transport.transport;\n  }\n\n  emulation() {\n    return false;\n  }\n\n  supported() {\n    return this.options.sockjs !== null;\n  }\n\n  initialize(_protocol: 'json', callbacks: any) {\n    this._transport = new this.options.sockjs(this.endpoint, null, this.options.sockjsOptions);\n\n    this._transport.onopen = () => {\n      callbacks.onOpen();\n    };\n\n    this._transport.onerror = e => {\n      callbacks.onError(e);\n    };\n\n    this._transport.onclose = closeEvent => {\n      callbacks.onClose(closeEvent);\n    };\n\n    this._transport.onmessage = event => {\n      callbacks.onMessage(event.data);\n    };\n  }\n\n  close() {\n    this._transport.close();\n  }\n\n  send(data: any) {\n    this._transport.send(data);\n  }\n}\n", "/** @internal */\nexport class WebsocketTransport {\n  private _transport: any;\n  private endpoint: string;\n  private options: any;\n\n  constructor(endpoint: string, options: any) {\n    this.endpoint = endpoint;\n    this.options = options;\n    this._transport = null;\n  }\n\n  name() {\n    return 'websocket';\n  }\n\n  subName() {\n    return 'websocket';\n  }\n\n  emulation() {\n    return false;\n  }\n\n  supported() {\n    return this.options.websocket !== undefined && this.options.websocket !== null;\n  }\n\n  initialize(protocol: string, callbacks: any) {\n    let subProtocol = '';\n    if (protocol === 'protobuf') {\n      subProtocol = 'centrifuge-protobuf';\n    }\n    if (subProtocol !== '') {\n      this._transport = new this.options.websocket(this.endpoint, subProtocol);\n    } else {\n      this._transport = new this.options.websocket(this.endpoint);\n    }\n    if (protocol === 'protobuf') {\n      this._transport.binaryType = 'arraybuffer';\n    }\n\n    this._transport.onopen = () => {\n      callbacks.onOpen();\n    };\n\n    this._transport.onerror = e => {\n      callbacks.onError(e);\n    };\n\n    this._transport.onclose = closeEvent => {\n      callbacks.onClose(closeEvent);\n    };\n\n    this._transport.onmessage = event => {\n      callbacks.onMessage(event.data);\n    };\n  }\n\n  close() {\n    this._transport.close();\n  }\n\n  send(data: any) {\n    this._transport.send(data);\n  }\n}\n", "/** @internal */\nexport class HttpStreamTransport {\n  endpoint: string;\n  options: any;\n  _abortController: any | null;\n  _utf8decoder: TextDecoder;\n  _protocol: string;\n\n  constructor(endpoint, options) {\n    this.endpoint = endpoint;\n    this.options = options;\n    this._abortController = null;\n    this._utf8decoder = new TextDecoder();\n    this._protocol = 'json';\n  }\n\n  name() {\n    return 'http_stream';\n  }\n\n  subName() {\n    return 'http_stream';\n  }\n\n  emulation() {\n    return true;\n  }\n\n  _handleErrors(response: any) {\n    if (!response.ok) throw new Error(response.status);\n    return response;\n  }\n\n  _fetchEventTarget(self, endpoint: string, options: object) {\n    const eventTarget = new EventTarget();\n    // fetch with connection timeout maybe? https://github.com/github/fetch/issues/175\n    const fetchFunc = self.options.fetch;\n    fetchFunc(endpoint, options)\n      .then(self._handleErrors)\n      .then(response => {\n        eventTarget.dispatchEvent(new Event('open'));\n        let jsonStreamBuf = '';\n        let jsonStreamPos = 0;\n        let protoStreamBuf = new Uint8Array();\n        const reader = response.body.getReader();\n        return new self.options.readableStream({\n          start(controller) {\n            function pump() {\n              return reader.read().then(({ done, value }) => {\n                // When no more data needs to be consumed, close the stream\n                if (done) {\n                  eventTarget.dispatchEvent(new Event('close'));\n                  controller.close();\n                  return;\n                }\n                try {\n                  if (self._protocol === 'json') {\n                    jsonStreamBuf += self._utf8decoder.decode(value);\n                    while (jsonStreamPos < jsonStreamBuf.length) {\n                      if (jsonStreamBuf[jsonStreamPos] === '\\n') {\n                        const line = jsonStreamBuf.substring(0, jsonStreamPos);\n                        eventTarget.dispatchEvent(new MessageEvent('message', { data: line }));\n                        jsonStreamBuf = jsonStreamBuf.substring(jsonStreamPos + 1);\n                        jsonStreamPos = 0;\n                      } else {\n                        ++jsonStreamPos;\n                      }\n                    }\n                  } else {\n                    const mergedArray = new Uint8Array(protoStreamBuf.length + value.length);\n                    mergedArray.set(protoStreamBuf);\n                    mergedArray.set(value, protoStreamBuf.length);\n                    protoStreamBuf = mergedArray;\n\n                    while (true) {\n                      const result = self.options.decoder.decodeReply(protoStreamBuf);\n                      if (result.ok) {\n                        const data = protoStreamBuf.slice(0, result.pos);\n                        eventTarget.dispatchEvent(new MessageEvent('message', { data: data }));\n                        protoStreamBuf = protoStreamBuf.slice(result.pos);\n                        continue;\n                      }\n                      break;\n                    }\n                  }\n                } catch (error) {\n                  // @ts-ignore - improve later.\n                  eventTarget.dispatchEvent(new Event('error', { detail: error }));\n                  eventTarget.dispatchEvent(new Event('close'));\n                  controller.close();\n                  return;\n                }\n                pump();\n              }).catch(function (e) {\n                // @ts-ignore - improve later.\n                eventTarget.dispatchEvent(new Event('error', { detail: e }));\n                eventTarget.dispatchEvent(new Event('close'));\n                controller.close();\n                return;\n              });\n            }\n            return pump();\n          }\n        });\n      })\n      .catch(error => {\n        // @ts-ignore - improve later.\n        eventTarget.dispatchEvent(new Event('error', { detail: error }));\n        eventTarget.dispatchEvent(new Event('close'));\n      });\n    return eventTarget;\n  }\n\n  supported() {\n    return this.options.fetch !== null &&\n      this.options.readableStream !== null &&\n      typeof TextDecoder !== 'undefined' &&\n      typeof AbortController !== 'undefined' &&\n      typeof EventTarget !== 'undefined' &&\n      typeof Event !== 'undefined' &&\n      typeof MessageEvent !== 'undefined' &&\n      typeof Error !== 'undefined';\n  }\n\n  initialize(protocol: string, callbacks: any, initialData: any) {\n    this._protocol = protocol;\n    this._abortController = new AbortController();\n    let headers: any;\n    let body: any;\n    if (protocol === 'json') {\n      headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      };\n      body = initialData;\n    } else {\n      headers = {\n        'Accept': 'application/octet-stream',\n        'Content-Type': 'application/octet-stream'\n      };\n      body = initialData;\n    }\n\n    const fetchOptions = {\n      method: 'POST',\n      headers: headers,\n      body: body,\n      mode: 'cors',\n      credentials: 'same-origin',\n      cache: 'no-cache',\n      signal: this._abortController.signal\n    }\n\n    const eventTarget = this._fetchEventTarget(\n      this,\n      this.endpoint,\n      fetchOptions\n    );\n\n    eventTarget.addEventListener('open', () => {\n      callbacks.onOpen();\n    });\n\n    eventTarget.addEventListener('error', (e) => {\n      this._abortController.abort();\n      callbacks.onError(e);\n    });\n\n    eventTarget.addEventListener('close', () => {\n      this._abortController.abort();\n      callbacks.onClose({\n        code: 4,\n        reason: 'connection closed'\n      });\n    });\n\n    eventTarget.addEventListener('message', (e: any) => {\n      callbacks.onMessage(e.data);\n    });\n  }\n\n  close() {\n    this._abortController.abort();\n  }\n\n  send(data: any, session: string, node: string) {\n    let headers: any;\n    let body: any;\n    const req = {\n      session: session,\n      node: node,\n      data: data\n    };\n    if (this._protocol === 'json') {\n      headers = {\n        'Content-Type': 'application/json'\n      };\n      body = JSON.stringify(req);\n    } else {\n      headers = {\n        'Content-Type': 'application/octet-stream'\n      };\n      body = this.options.encoder.encodeEmulationRequest(req);\n    }\n\n    const fetchFunc = this.options.fetch;\n    const fetchOptions = {\n      method: 'POST',\n      headers: headers,\n      body: body,\n      mode: 'cors',\n      credentials: 'same-origin',\n      cache: 'no-cache'\n    }\n    fetchFunc(this.options.emulationEndpoint, fetchOptions);\n  }\n}\n", "/** @internal */\nexport class SseTransport {\n  endpoint: string;\n  options: any;\n  _protocol: string;\n  _transport: any;\n  _onClose: any;\n\n  constructor(endpoint: string, options: any) {\n    this.endpoint = endpoint;\n    this.options = options;\n    this._protocol = 'json';\n    this._transport = null;\n    this._onClose = null;\n  }\n\n  name() {\n    return 'sse';\n  }\n\n  subName() {\n    return 'sse';\n  }\n\n  emulation() {\n    return true;\n  }\n\n  supported() {\n    return this.options.eventsource !== null && this.options.fetch !== null;\n  }\n\n  initialize(_protocol: 'json', callbacks: any, initialData: any) {\n    let url: any;\n    if (globalThis && globalThis.document && globalThis.document.baseURI) {\n      // Handle case when endpoint is relative, like //example.com/connection/sse\n      url = new URL(this.endpoint, globalThis.document.baseURI);\n    } else {\n      url = new URL(this.endpoint);\n    }\n    url.searchParams.append('cf_connect', initialData);\n\n    const eventsourceOptions = {}\n    const eventSource = new this.options.eventsource(url.toString(), eventsourceOptions);\n    this._transport = eventSource;\n\n    const self = this;\n\n    eventSource.onopen = function () {\n      callbacks.onOpen();\n    };\n\n    eventSource.onerror = function (e) {\n      eventSource.close();\n      callbacks.onError(e);\n      callbacks.onClose({\n        code: 4,\n        reason: 'connection closed'\n      });\n    };\n\n    eventSource.onmessage = function (e) {\n      callbacks.onMessage(e.data);\n    };\n\n    self._onClose = function () {\n      callbacks.onClose({\n        code: 4,\n        reason: 'connection closed'\n      });\n    };\n  }\n\n  close() {\n    this._transport.close();\n    if (this._onClose !== null) {\n      this._onClose();\n    }\n  }\n\n  send(data: any, session: string, node: string) {\n    const req = {\n      session: session,\n      node: node,\n      data: data\n    };\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    const body = JSON.stringify(req);\n    const fetchFunc = this.options.fetch;\n    const fetchOptions = {\n      method: 'POST',\n      headers: headers,\n      body: body,\n      mode: 'cors',\n      credentials: 'same-origin',\n      cache: 'no-cache'\n    }\n    fetchFunc(this.options.emulationEndpoint, fetchOptions);\n  }\n}\n", "/** @internal */\nexport class WebtransportTransport {\n  private _transport: any;\n  private _stream: any;\n  private _writer: any;\n  private endpoint: string;\n  private options: any;\n  _utf8decoder: TextDecoder;\n  _protocol: string;\n\n  constructor(endpoint: string, options: any) {\n    this.endpoint = endpoint;\n    this.options = options;\n    this._transport = null;\n    this._stream = null;\n    this._writer = null;\n    this._utf8decoder = new TextDecoder();\n    this._protocol = 'json';\n  }\n\n  name() {\n    return 'webtransport';\n  }\n\n  subName() {\n    return 'webtransport';\n  }\n\n  emulation() {\n    return false;\n  }\n\n  supported() {\n    return this.options.webtransport !== undefined && this.options.webtransport !== null;\n  }\n\n  async initialize(protocol: string, callbacks: any) {\n    let url: any;\n    if (globalThis && globalThis.document && globalThis.document.baseURI) {\n      // Handle case when endpoint is relative, like //example.com/connection/webtransport\n      url = new URL(this.endpoint, globalThis.document.baseURI);\n    } else {\n      url = new URL(this.endpoint);\n    }\n    if (protocol === 'protobuf') {\n      url.searchParams.append('cf_protocol', 'protobuf');\n    }\n\n    this._protocol = protocol;\n    const eventTarget = new EventTarget();\n\n    this._transport = new this.options.webtransport(url.toString());\n    this._transport.closed.then(() => {\n      callbacks.onClose({\n        code: 4,\n        reason: 'connection closed'\n      });\n    }).catch(() => {\n      callbacks.onClose({\n        code: 4,\n        reason: 'connection closed'\n      });\n    });\n    try {\n      await this._transport.ready;\n    } catch {\n      this.close();\n      return;\n    }\n    let stream: any;\n    try {\n      stream = await this._transport.createBidirectionalStream();\n    } catch {\n      this.close();\n      return;\n    }\n    this._stream = stream;\n    this._writer = this._stream.writable.getWriter();\n\n    eventTarget.addEventListener('close', () => {\n      callbacks.onClose({\n        code: 4,\n        reason: 'connection closed'\n      });\n    });\n\n    eventTarget.addEventListener('message', (e: any) => {\n      callbacks.onMessage(e.data);\n    });\n\n    this._startReading(eventTarget);\n\n    callbacks.onOpen();\n  }\n\n  async _startReading(eventTarget: any) {\n    const reader = this._stream.readable.getReader();\n    let jsonStreamBuf = '';\n    let jsonStreamPos = 0;\n    let protoStreamBuf = new Uint8Array();\n    try {\n      while (true) {\n        const { done, value } = await reader.read();\n        if (value.length > 0) {\n          if (this._protocol === 'json') {\n            jsonStreamBuf += this._utf8decoder.decode(value);\n            while (jsonStreamPos < jsonStreamBuf.length) {\n              if (jsonStreamBuf[jsonStreamPos] === '\\n') {\n                const line = jsonStreamBuf.substring(0, jsonStreamPos);\n                eventTarget.dispatchEvent(new MessageEvent('message', { data: line }));\n                jsonStreamBuf = jsonStreamBuf.substring(jsonStreamPos + 1);\n                jsonStreamPos = 0;\n              } else {\n                ++jsonStreamPos;\n              }\n            }\n          } else {\n            const mergedArray = new Uint8Array(protoStreamBuf.length + value.length);\n            mergedArray.set(protoStreamBuf);\n            mergedArray.set(value, protoStreamBuf.length);\n            protoStreamBuf = mergedArray;\n\n            while (true) {\n              const result = this.options.decoder.decodeReply(protoStreamBuf);\n              if (result.ok) {\n                const data = protoStreamBuf.slice(0, result.pos);\n                eventTarget.dispatchEvent(new MessageEvent('message', { data: data }));\n                protoStreamBuf = protoStreamBuf.slice(result.pos);\n                continue;\n              }\n              break;\n            }\n          }\n        }\n        if (done) {\n          break;\n        }\n      }\n    } catch {\n      eventTarget.dispatchEvent(new Event('close'));\n    }\n  }\n\n  async close() {\n    try {\n      if (this._writer) {\n        await this._writer.close();\n      }\n      this._transport.close();\n    } catch (e) {\n      // already closed.\n    }\n  }\n\n  async send(data: any) {\n    let binary: Uint8Array;\n    if (this._protocol === 'json') {\n      // Need extra \\n since WT is non-frame protocol. \n      binary = new TextEncoder().encode(data + '\\n');\n    } else {\n      binary = data;\n    }\n    try {\n      await this._writer.write(binary);\n    } catch (e) {\n      this.close();\n    }\n  }\n}\n", "/** @internal */\nexport class JsonEncoder {\n  encodeCommands(commands: any[]): string {\n    return commands.map(c => JSON.stringify(c)).join('\\n');\n  }\n}\n\n/** @internal */\nexport class JsonDecoder {\n  decodeReplies(data: string): any[] {\n    return data.trim().split('\\n').map(r => JSON.parse(r));\n  }\n}\n", "import { Subscription } from './subscription';\nimport {\n  errorCodes, disconnectedCodes,\n  connectingCodes, subscribingCodes\n} from './codes';\n\nimport { SockjsTransport } from './transport_sockjs';\nimport { WebsocketTransport } from './transport_websocket';\nimport { HttpStreamTransport } from './transport_http_stream';\nimport { SseTransport } from './transport_sse';\nimport { WebtransportTransport } from './transport_webtransport';\n\nimport { JsonEncoder, JsonDecoder } from './json';\n\nimport {\n  isFunction, log, startsWith, errorExists,\n  backoff, ttlMilliseconds\n} from './utils';\n\nimport {\n  State, Options, SubscriptionState, ClientEvents,\n  TypedEventEmitter, RpcResult, SubscriptionOptions,\n  HistoryOptions, HistoryResult, PublishResult,\n  PresenceResult, PresenceStatsResult, SubscribedContext,\n  TransportEndpoint,\n} from './types';\n\nimport EventEmitter from 'events';\n\nconst defaults: Options = {\n  protocol: 'json',\n  token: null,\n  getToken: null,\n  data: null,\n  debug: false,\n  name: 'js',\n  version: '',\n  fetch: null,\n  readableStream: null,\n  websocket: null,\n  eventsource: null,\n  sockjs: null,\n  sockjsOptions: {},\n  emulationEndpoint: '/emulation',\n  minReconnectDelay: 500,\n  maxReconnectDelay: 20000,\n  timeout: 5000,\n  maxServerPingDelay: 10000,\n  networkEventTarget: null,\n}\n\ninterface serverSubscription {\n  offset: number;\n  epoch: string;\n  recoverable: boolean;\n}\n\n/** Centrifuge is a Centrifuge/Centrifugo bidirectional client. */\nexport class Centrifuge extends (EventEmitter as new () => TypedEventEmitter<ClientEvents>) {\n  state: State;\n  private _endpoint: string | Array<TransportEndpoint>;\n  private _emulation: boolean;\n  private _transports: any[];\n  private _currentTransportIndex: number;\n  private _triedAllTransports: boolean;\n  private _transportWasOpen: boolean;\n  private _transport?: any;\n  private _transportClosed: boolean;\n  private _reconnecting: boolean;\n  private _reconnectTimeout?: null | ReturnType<typeof setTimeout> = null;\n  private _reconnectAttempts: number;\n  private _client: null;\n  private _session: string;\n  private _node: string;\n  private _subs: Record<string, Subscription>;\n  private _serverSubs: Record<string, serverSubscription>;\n  private _commandId: number;\n  private _commands: any[];\n  private _batching: boolean;\n  private _refreshRequired: boolean;\n  private _refreshTimeout?: null | ReturnType<typeof setTimeout> = null;\n  private _callbacks: Record<number, any>;\n  private _token?: string;\n  private _dispatchPromise: Promise<void>;\n  private _serverPing: number;\n  private _serverPingTimeout?: null | ReturnType<typeof setTimeout> = null;\n  private _sendPong: boolean;\n  private _promises: Record<number, any>;\n  private _promiseId: number;\n  private _networkEventsSet: boolean;\n\n  private _debugEnabled: boolean;\n  private _config: Options;\n  protected _encoder: any;\n  protected _decoder: any;\n\n  static State: { Disconnected: string; Connecting: string; Connected: string; };\n  static SubscriptionState: { Unsubscribed: string; Subscribing: string; Subscribed: string; };\n\n  /** Constructs Centrifuge client. Call connect() method to start connecting. */\n  constructor(endpoint: string | Array<TransportEndpoint>, options?: Partial<Options>) {\n    super();\n    this.state = State.Disconnected;\n    this._endpoint = endpoint;\n    this._emulation = false;\n    this._transports = [];\n    this._currentTransportIndex = 0;\n    this._triedAllTransports = false;\n    this._transportWasOpen = false;\n    this._transport = null;\n    this._transportClosed = true;\n    this._encoder = null;\n    this._decoder = null;\n    this._reconnecting = false;\n    this._reconnectTimeout = null;\n    this._reconnectAttempts = 0;\n    this._client = null;\n    this._session = '';\n    this._node = '';\n    this._subs = {};\n    this._serverSubs = {};\n    this._commandId = 0;\n    this._commands = [];\n    this._batching = false;\n    this._refreshRequired = false;\n    this._refreshTimeout = null;\n    this._callbacks = {};\n    this._token = undefined;\n    this._dispatchPromise = Promise.resolve();\n    this._serverPing = 0;\n    this._serverPingTimeout = null;\n    this._sendPong = false;\n    this._promises = {};\n    this._promiseId = 0;\n    this._debugEnabled = false;\n    this._networkEventsSet = false;\n\n    this._config = { ...defaults, ...options };\n    this._configure();\n\n    if (this._debugEnabled) {\n      this.on('state', (ctx) => {\n        this._debug('client state', ctx.oldState, '->', ctx.newState);\n      });\n      this.on('error', (ctx) => {\n        this._debug('client error', ctx);\n      });\n    } else {\n      // Avoid unhandled exception in EventEmitter for non-set error handler.\n      this.on('error', function () { Function.prototype(); });\n    }\n  }\n\n  /** newSubscription allocates new Subscription to a channel. Since server only allows \n   * one subscription per channel per client this method throws if client already has \n   * channel subscription in internal registry.\n   * */\n  newSubscription(channel: string, options?: Partial<SubscriptionOptions>): Subscription {\n    if (this.getSubscription(channel) !== null) {\n      throw new Error('Subscription to the channel ' + channel + ' already exists');\n    }\n    const sub = new Subscription(this, channel, options);\n    this._subs[channel] = sub;\n    return sub;\n  }\n\n  /** getSubscription returns Subscription if it's registered in the internal \n   * registry or null. */\n  getSubscription(channel: string): Subscription | null {\n    return this._getSub(channel);\n  }\n\n  /** removeSubscription allows removing Subcription from the internal registry. Subscrption \n   * must be in unsubscribed state. */\n  removeSubscription(sub: Subscription | null) {\n    if (!sub) {\n      return;\n    }\n    if (sub.state !== SubscriptionState.Unsubscribed) {\n      sub.unsubscribe();\n    }\n    this._removeSubscription(sub);\n  }\n\n  /** Get a map with all current client-side subscriptions. */\n  subscriptions(): Record<string, Subscription> {\n    return this._subs;\n  }\n\n  /** ready returns a Promise which resolves upon client goes to Connected \n   * state and rejects in case of client goes to Disconnected or Failed state.\n   * Users can provide optional timeout in milliseconds. */\n  ready(timeout?: number): Promise<void> {\n    if (this.state === State.Disconnected) {\n      return Promise.reject({ code: errorCodes.clientDisconnected, message: 'client disconnected' });\n    }\n    if (this.state === State.Connected) {\n      return Promise.resolve();\n    }\n    return new Promise((res, rej) => {\n      const ctx: any = {\n        resolve: res,\n        reject: rej\n      };\n      if (timeout) {\n        ctx.timeout = setTimeout(function () {\n          rej({ code: errorCodes.timeout, message: 'timeout' });\n        }, timeout);\n      }\n      this._promises[this._nextPromiseId()] = ctx;\n    });\n  }\n\n  /** connect to a server. */\n  connect() {\n    if (this._isConnected()) {\n      this._debug('connect called when already connected');\n      return;\n    }\n    if (this._isConnecting()) {\n      this._debug('connect called when already connecting');\n      return;\n    }\n    this._debug('connect called');\n    this._reconnectAttempts = 0;\n    this._startConnecting();\n  }\n\n  /** disconnect from a server. */\n  disconnect() {\n    this._disconnect(disconnectedCodes.disconnectCalled, 'disconnect called', false);\n  }\n\n  /** send asynchronous data to a server (without any response from a server \n   * expected, see rpc method if you need response). */\n  send(data: any): Promise<void> {\n    const cmd = {\n      send: {\n        data: data\n      }\n    };\n\n    const self = this;\n\n    return this._methodCall().then(function () {\n      const sent = self._transportSendCommands([cmd]); // can send message to server without id set\n      if (!sent) {\n        return Promise.reject(self._createErrorObject(errorCodes.transportWriteError, 'transport write error'));\n      }\n      return Promise.resolve();\n    });\n  }\n\n  /** rpc to a server - i.e. a call which waits for a response with data. */\n  rpc(method: string, data: any): Promise<RpcResult> {\n    const cmd = {\n      rpc: {\n        method: method,\n        data: data\n      }\n    };\n\n    const self = this;\n\n    return this._methodCall().then(function () {\n      return self._callPromise(cmd, function (reply: any) {\n        return {\n          'data': reply.rpc.data\n        };\n      });\n    });\n  }\n\n  /** publish data to a channel. */\n  publish(channel: string, data: any): Promise<PublishResult> {\n    const cmd = {\n      publish: {\n        channel: channel,\n        data: data\n      }\n    };\n\n    const self = this;\n\n    return this._methodCall().then(function () {\n      return self._callPromise(cmd, function () {\n        return {};\n      });\n    });\n  }\n\n  /** history for a channel. By default it does not return publications (only current\n   *  StreamPosition data) \u2013 provide an explicit limit > 0 to load publications.*/\n  history(channel: string, options?: HistoryOptions): Promise<HistoryResult> {\n    const cmd = {\n      history: this._getHistoryRequest(channel, options)\n    };\n\n    const self = this;\n\n    return this._methodCall().then(function () {\n      return self._callPromise(cmd, function (reply: any) {\n        const result = reply.history;\n        const publications: any[] = [];\n        if (result.publications) {\n          for (let i = 0; i < result.publications.length; i++) {\n            publications.push(self._getPublicationContext(channel, result.publications[i]));\n          }\n        }\n        return {\n          'publications': publications,\n          'epoch': result.epoch || '',\n          'offset': result.offset || 0\n        };\n      });\n    });\n  }\n\n  /** presence for a channel. */\n  presence(channel: string): Promise<PresenceResult> {\n    const cmd = {\n      presence: {\n        channel: channel\n      }\n    };\n\n    const self = this;\n\n    return this._methodCall().then(function () {\n      return self._callPromise(cmd, function (reply: any) {\n        const clients = reply.presence.presence;\n        for (const clientId in clients) {\n          if (clients.hasOwnProperty(clientId)) {\n            const connInfo = clients[clientId]['conn_info'];\n            const chanInfo = clients[clientId]['chan_info'];\n            if (connInfo) {\n              clients[clientId].connInfo = connInfo;\n            }\n            if (chanInfo) {\n              clients[clientId].chanInfo = chanInfo;\n            }\n          }\n        }\n        return {\n          'clients': clients\n        };\n      });\n    });\n  }\n\n  /** presence stats for a channel. */\n  presenceStats(channel: string): Promise<PresenceStatsResult> {\n    const cmd = {\n      'presence_stats': {\n        channel: channel\n      }\n    };\n\n    const self = this;\n\n    return this._methodCall().then(function () {\n      return self._callPromise(cmd, function (reply: any) {\n        const result = reply.presence_stats;\n        return {\n          'numUsers': result.num_users,\n          'numClients': result.num_clients\n        };\n      });\n    });\n  }\n\n  /** start command batching (collect into temporary buffer without sending to a server) \n   * until stopBatching called.*/\n  startBatching() {\n    // start collecting messages without sending them to Centrifuge until flush\n    // method called\n    this._batching = true;\n  }\n\n  /** stop batching commands and flush collected commands to the \n   * network (all in one request/frame).*/\n  stopBatching() {\n    const self = this;\n    // Why so nested? Two levels here requred to deal with promise resolving queue.\n    // In Subscription case we wait 2 futures before sending data to connection.\n    // Otherwise _batching becomes false before batching decision has a chance to be executed.\n    Promise.resolve().then(function () {\n      Promise.resolve().then(function () {\n        self._batching = false;\n        self._flush();\n      })\n    })\n  }\n\n  private _debug(...args: any[]) {\n    if (!this._debugEnabled) {\n      return;\n    }\n    log('debug', args);\n  }\n\n  /** @internal */\n  private _setFormat(format: 'json' | 'protobuf') {\n    if (this._formatOverride(format)) {\n      return;\n    }\n    if (format === 'protobuf') {\n      throw new Error('not implemented by JSON-only Centrifuge client, use client with Protobuf support');\n    }\n    this._encoder = new JsonEncoder();\n    this._decoder = new JsonDecoder();\n  }\n\n  /** @internal */\n  protected _formatOverride(_format: 'json' | 'protobuf') {\n    return false;\n  }\n\n  private _configure() {\n    if (!('Promise' in globalThis)) {\n      throw new Error('Promise polyfill required');\n    }\n\n    if (!this._endpoint) {\n      throw new Error('endpoint configuration required');\n    }\n\n    if (this._config.protocol !== 'json' && this._config.protocol !== 'protobuf') {\n      throw new Error('unsupported protocol ' + this._config.protocol);\n    }\n\n    if (this._config.token !== null) {\n      this._token = this._config.token;\n    }\n\n    this._setFormat('json');\n    if (this._config.protocol === 'protobuf') {\n      this._setFormat('protobuf');\n    }\n\n    if (this._config.debug === true ||\n      (typeof localStorage !== 'undefined' && localStorage.getItem('centrifuge.debug'))) {\n      this._debugEnabled = true;\n    }\n\n    this._debug('config', this._config);\n\n    if (typeof this._endpoint === 'string') {\n      // Single address.\n    } else if (typeof this._endpoint === 'object' && this._endpoint instanceof Array) {\n      this._transports = this._endpoint;\n      this._emulation = true;\n      for (const i in this._transports) {\n        const transportConfig = this._transports[i];\n        if (!transportConfig.endpoint || !transportConfig.transport) {\n          throw new Error('malformed transport configuration');\n        }\n        const transportName = transportConfig.transport;\n        if (['websocket', 'http_stream', 'sse', 'sockjs', 'webtransport'].indexOf(transportName) < 0) {\n          throw new Error('unsupported transport name: ' + transportName);\n        }\n      }\n    } else {\n      throw new Error('unsupported url configuration type: only string or array of objects are supported');\n    }\n  }\n\n  private _setState(newState: State) {\n    if (this.state !== newState) {\n      this._reconnecting = false;\n      const oldState = this.state;\n      this.state = newState;\n      this.emit('state', { newState, oldState });\n      return true;\n    }\n    return false;\n  }\n\n  private _isDisconnected() {\n    return this.state === State.Disconnected;\n  }\n\n  private _isConnecting() {\n    return this.state === State.Connecting;\n  }\n\n  private _isConnected() {\n    return this.state === State.Connected;\n  }\n\n  private _nextCommandId() {\n    return ++this._commandId;\n  }\n\n  private _setNetworkEvents() {\n    if (this._networkEventsSet) {\n      return;\n    }\n    let eventTarget: EventTarget | null = null;\n    if (this._config.networkEventTarget !== null) {\n      eventTarget = this._config.networkEventTarget;\n    } else if (typeof globalThis.addEventListener !== 'undefined') {\n      eventTarget = globalThis as EventTarget;\n    }\n    if (eventTarget) {\n      eventTarget.addEventListener('offline', () => {\n        this._debug('offline event triggered');\n        if (this.state === State.Connected || this.state === State.Connecting) {\n          this._disconnect(connectingCodes.transportClosed, 'transport closed', true);\n        }\n      });\n      eventTarget.addEventListener('online', () => {\n        this._debug('online event triggered');\n        if (this.state === State.Connecting) {\n          this._clearReconnectTimeout();\n          this._startReconnecting();\n        }\n      });\n      this._networkEventsSet = true;\n    }\n  }\n\n  private _getReconnectDelay() {\n    const delay = backoff(this._reconnectAttempts, this._config.minReconnectDelay, this._config.maxReconnectDelay);\n    this._reconnectAttempts += 1;\n    return delay;\n  }\n\n  private _clearOutgoingRequests() {\n    // fire errbacks of registered outgoing calls.\n    for (const id in this._callbacks) {\n      if (this._callbacks.hasOwnProperty(id)) {\n        const callbacks = this._callbacks[id];\n        clearTimeout(callbacks.timeout);\n        const errback = callbacks.errback;\n        if (!errback) {\n          continue;\n        }\n        errback({ error: this._createErrorObject(errorCodes.connectionClosed, 'connection closed') });\n      }\n    }\n    this._callbacks = {};\n  }\n\n  private _clearConnectedState() {\n    this._client = null;\n    this._clearServerPingTimeout();\n    this._clearRefreshTimeout();\n\n    // fire events for client-side subscriptions.\n    for (const channel in this._subs) {\n      if (!this._subs.hasOwnProperty(channel)) {\n        continue;\n      }\n      const sub = this._subs[channel];\n      if (sub.state === SubscriptionState.Subscribed) {\n        // @ts-ignore \u2013 we are hiding some symbols from public API autocompletion.\n        sub._setSubscribing(subscribingCodes.transportClosed, 'transport closed');\n      }\n    }\n\n    // fire events for server-side subscriptions.\n    for (const channel in this._serverSubs) {\n      if (this._serverSubs.hasOwnProperty(channel)) {\n        this.emit('subscribing', { channel: channel });\n      }\n    }\n  }\n\n  private _handleWriteError(commands: any[]) {\n    for (const command of commands) {\n      const id = command.id;\n      if (!(id in this._callbacks)) {\n        continue;\n      }\n      const callbacks = this._callbacks[id];\n      clearTimeout(this._callbacks[id].timeout);\n      delete this._callbacks[id];\n      const errback = callbacks.errback;\n      errback({ error: this._createErrorObject(errorCodes.transportWriteError, 'transport write error') });\n    }\n  }\n\n  private _transportSendCommands(commands: any[]) {\n    if (!commands.length) {\n      return true;\n    }\n    if (!this._transport) {\n      return false\n    }\n    try {\n      this._transport.send(this._encoder.encodeCommands(commands), this._session, this._node);\n    } catch (e) {\n      this._debug('error writing commands', e);\n      this._handleWriteError(commands);\n      return false;\n    }\n    return true;\n  }\n\n  private _initializeTransport() {\n    let websocket: any;\n    if (this._config.websocket !== null) {\n      websocket = this._config.websocket;\n    } else {\n      if (!(typeof globalThis.WebSocket !== 'function' && typeof globalThis.WebSocket !== 'object')) {\n        websocket = globalThis.WebSocket;\n      }\n    }\n\n    let sockjs = null;\n    if (this._config.sockjs !== null) {\n      sockjs = this._config.sockjs;\n    } else {\n      if (typeof globalThis.SockJS !== 'undefined') {\n        sockjs = globalThis.SockJS;\n      }\n    }\n\n    let eventsource: any = null;\n    if (this._config.eventsource !== null) {\n      eventsource = this._config.eventsource;\n    } else {\n      if (typeof globalThis.EventSource !== 'undefined') {\n        eventsource = globalThis.EventSource;\n      }\n    }\n\n    let fetchFunc: any = null;\n    if (this._config.fetch !== null) {\n      fetchFunc = this._config.fetch;\n    } else {\n      if (typeof globalThis.fetch !== 'undefined') {\n        fetchFunc = globalThis.fetch;\n      }\n    }\n\n    let readableStream: any = null;\n    if (this._config.readableStream !== null) {\n      readableStream = this._config.readableStream;\n    } else {\n      if (typeof globalThis.ReadableStream !== 'undefined') {\n        readableStream = globalThis.ReadableStream;\n      }\n    }\n\n    if (!this._emulation) {\n      if (startsWith(this._endpoint, 'http')) {\n        throw new Error('Provide explicit transport endpoints configuration in case of using HTTP (i.e. using array of TransportEndpoint instead of a single string), or use ws(s):// scheme in an endpoint if you aimed using WebSocket transport');\n      } else {\n        this._debug('client will use websocket');\n        this._transport = new WebsocketTransport(this._endpoint as string, {\n          websocket: websocket\n        });\n        if (!this._transport.supported()) {\n          throw new Error('WebSocket not available');\n        }\n      }\n    } else {\n      if (this._currentTransportIndex >= this._transports.length) {\n        this._triedAllTransports = true;\n        this._currentTransportIndex = 0;\n      }\n      let count = 0;\n      while (true) {\n        if (count >= this._transports.length) {\n          throw new Error('no supported transport found');\n        }\n        const transportConfig = this._transports[this._currentTransportIndex];\n        const transportName = transportConfig.transport;\n        const transportEndpoint = transportConfig.endpoint;\n\n        if (transportName === 'websocket') {\n          this._debug('trying websocket transport');\n          this._transport = new WebsocketTransport(transportEndpoint, {\n            websocket: websocket\n          });\n          if (!this._transport.supported()) {\n            this._debug('websocket transport not available');\n            this._currentTransportIndex++;\n            count++;\n            continue;\n          }\n        } else if (transportName === 'webtransport') {\n          this._debug('trying webtransport transport');\n          this._transport = new WebtransportTransport(transportEndpoint, {\n            webtransport: globalThis.WebTransport,\n            decoder: this._decoder,\n            encoder: this._encoder\n          });\n          if (!this._transport.supported()) {\n            this._debug('webtransport transport not available');\n            this._currentTransportIndex++;\n            count++;\n            continue;\n          }\n        } else if (transportName === 'http_stream') {\n          this._debug('trying http_stream transport');\n          this._transport = new HttpStreamTransport(transportEndpoint, {\n            fetch: fetchFunc,\n            readableStream: readableStream,\n            emulationEndpoint: this._config.emulationEndpoint,\n            decoder: this._decoder,\n            encoder: this._encoder\n          });\n          if (!this._transport.supported()) {\n            this._debug('http_stream transport not available');\n            this._currentTransportIndex++;\n            count++;\n            continue;\n          }\n        } else if (transportName === 'sse') {\n          this._debug('trying sse transport');\n          this._transport = new SseTransport(transportEndpoint, {\n            eventsource: eventsource,\n            fetch: fetchFunc,\n            emulationEndpoint: this._config.emulationEndpoint,\n          });\n          if (!this._transport.supported()) {\n            this._debug('sse transport not available');\n            this._currentTransportIndex++;\n            count++;\n            continue;\n          }\n        } else if (transportName === 'sockjs') {\n          this._debug('trying sockjs');\n          this._transport = new SockjsTransport(transportEndpoint, {\n            sockjs: sockjs,\n            sockjsOptions: this._config.sockjsOptions\n          });\n          if (!this._transport.supported()) {\n            this._debug('sockjs transport not available');\n            this._currentTransportIndex++;\n            count++;\n            continue;\n          }\n        } else {\n          throw new Error('unknown transport ' + transportName);\n        }\n        break;\n      }\n    }\n\n    const self = this;\n    const transport = this._transport;\n    let wasOpen = false;\n\n    let optimistic = true;\n    if (this._transport.name() === 'sse') {\n      // Avoid using optimistic subscriptions with SSE/EventSource as we are sending\n      // initial data in URL params. URL is recommended to be 2048 chars max \u2013 so adding\n      // subscription data may be risky.\n      optimistic = false;\n    }\n\n    const initialCommands: any[] = [];\n\n    if (this._transport.emulation()) {\n      const connectCommand = self._sendConnect(true);\n      initialCommands.push(connectCommand);\n      if (optimistic) {\n        const subscribeCommands: any[] = self._sendSubscribeCommands(true, true);\n        for (const i in subscribeCommands) {\n          initialCommands.push(subscribeCommands[i]);\n        }\n      }\n    }\n\n    this._setNetworkEvents();\n\n    const initialData = this._encoder.encodeCommands(initialCommands);\n\n    this._transportClosed = false\n\n    this._transport.initialize(this._config.protocol, {\n      onOpen: function () {\n        wasOpen = true;\n        self._debug(transport.subName(), 'transport open');\n        self._transportWasOpen = true;\n        if (transport.emulation()) {\n          return;\n        }\n        self.startBatching();\n        self._sendConnect(false);\n        if (optimistic) {\n          self._sendSubscribeCommands(true, false);\n        }\n        self.stopBatching();\n      },\n      onError: function (e: any) {\n        self._debug('transport level error', e);\n      },\n      onClose: function (closeEvent) {\n        self._debug(transport.subName(), 'transport closed');\n        self._transportClosed = true;\n\n        let reason = 'connection closed';\n        let needReconnect = true;\n        let code = 0;\n\n        if (closeEvent && 'code' in closeEvent && closeEvent.code) {\n          code = closeEvent.code;\n        }\n\n        if (closeEvent && closeEvent.reason) {\n          try {\n            const advice = JSON.parse(closeEvent.reason);\n            reason = advice.reason;\n            needReconnect = advice.reconnect;\n          } catch (e) {\n            reason = closeEvent.reason;\n            if ((code >= 3500 && code < 4000) || (code >= 4500 && code < 5000)) {\n              needReconnect = false;\n            }\n          }\n        }\n\n        if (code < 3000) {\n          if (code === 1009) {\n            code = disconnectedCodes.messageSizeLimit;\n            reason = 'message size limit exceeded';\n            needReconnect = false;\n          } else {\n            code = connectingCodes.transportClosed;\n            reason = 'transport closed';\n          }\n          if (self._emulation && !self._transportWasOpen) {\n            self._currentTransportIndex++;\n            if (self._currentTransportIndex >= self._transports.length) {\n              self._triedAllTransports = true;\n              self._currentTransportIndex = 0;\n            }\n          }\n        } else {\n          // Codes >= 3000 are sent from a server application level.\n          self._transportWasOpen = true;\n        }\n\n        let isInitialHandshake = false;\n        if (self._emulation && !self._transportWasOpen && !self._triedAllTransports) {\n          isInitialHandshake = true;\n        }\n\n        if (self._isConnecting() && !wasOpen) {\n          self.emit('error', {\n            type: 'transport',\n            error: {\n              code: errorCodes.transportClosed,\n              message: 'transport closed'\n            },\n            transport: transport.name()\n          });\n        }\n\n        self._disconnect(code, reason, needReconnect);\n\n        if (self._isConnecting()) {\n          let delay = self._getReconnectDelay();\n          if (isInitialHandshake) {\n            delay = 0;\n          }\n          self._debug('reconnect after ' + delay + ' milliseconds');\n          self._reconnecting = false;\n          self._reconnectTimeout = setTimeout(() => {\n            self._startReconnecting();\n          }, delay);\n        }\n      },\n      onMessage: function (data) {\n        self._dataReceived(data);\n      }\n    }, initialData);\n  }\n\n  private _sendConnect(skipSending: boolean): any {\n    const connectCommand = this._constructConnectCommand();\n    const self = this;\n    this._call(connectCommand, skipSending).then(resolveCtx => {\n      // @ts-ignore = improve later.\n      const result = resolveCtx.reply.connect;\n      self._connectResponse(result);\n      // @ts-ignore - improve later.\n      if (resolveCtx.next) {\n        // @ts-ignore - improve later.\n        resolveCtx.next();\n      }\n    }, rejectCtx => {\n      self._connectError(rejectCtx.error);\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n    });\n    return connectCommand;\n  }\n\n  private _startReconnecting() {\n    if (!this._isConnecting() || this._reconnecting) {\n      return;\n    }\n    this._debug('start reconnecting');\n    this._reconnecting = true;\n\n    if (this._transportClosed === false) {\n      this._debug('waiting for transport close');\n      return;\n    }\n\n    const needTokenRefresh = this._refreshRequired || (!this._token && this._config.getToken !== null);\n    if (!needTokenRefresh) {\n      this._initializeTransport();\n      return;\n    }\n\n    const self = this;\n\n    this._getToken().then(function (token) {\n      if (!self._isConnecting()) {\n        return;\n      }\n      if (!token) {\n        self._failUnauthorized();\n        return;\n      }\n      self._token = token;\n      self._debug('connection token refreshed');\n      self._initializeTransport();\n    }).catch(function (e) {\n      if (!self._isConnecting()) {\n        return;\n      }\n      self.emit('error', {\n        'type': 'connectToken',\n        'error': {\n          code: errorCodes.clientConnectToken,\n          message: e !== undefined ? e.toString() : ''\n        }\n      });\n      const delay = self._getReconnectDelay();\n      self._debug('error on connection token refresh, reconnect after ' + delay + ' milliseconds', e);\n      self._reconnecting = false;\n      self._reconnectTimeout = setTimeout(() => {\n        self._startReconnecting();\n      }, delay);\n    });\n  }\n\n  private _connectError(err: any) {\n    if (this.state !== State.Connecting) {\n      return;\n    }\n    if (err.code === 109) { // token expired.\n      // next connect attempt will try to refresh token.\n      this._refreshRequired = true;\n    }\n    if (err.code < 100 || err.temporary === true || err.code === 109) {\n      this.emit('error', {\n        'type': 'connect',\n        'error': err\n      });\n      // Not yet connected, closing transport is enough.\n      this._debug('closing transport due to connect error');\n      if (this._transport) {\n        const transport = this._transport;\n        this._transport = null;\n        transport.close();\n      }\n    } else {\n      this._disconnect(err.code, err.message, false);\n    }\n  }\n\n  private _constructConnectCommand(): any {\n    const req: any = {};\n\n    if (this._token) {\n      req.token = this._token;\n    }\n    if (this._config.data) {\n      req.data = this._config.data;\n    }\n    if (this._config.name) {\n      req.name = this._config.name;\n    }\n    if (this._config.version) {\n      req.version = this._config.version;\n    }\n\n    const subs = {};\n    let hasSubs = false;\n    for (const channel in this._serverSubs) {\n      if (this._serverSubs.hasOwnProperty(channel) && this._serverSubs[channel].recoverable) {\n        hasSubs = true;\n        const sub = {\n          'recover': true\n        };\n        if (this._serverSubs[channel].offset) {\n          sub['offset'] = this._serverSubs[channel].offset;\n        }\n        if (this._serverSubs[channel].epoch) {\n          sub['epoch'] = this._serverSubs[channel].epoch;\n        }\n        subs[channel] = sub;\n      }\n    }\n    if (hasSubs) {\n      req.subs = subs;\n    }\n    return {\n      connect: req\n    };\n  }\n\n  private _getHistoryRequest(channel: string, options?: HistoryOptions) {\n    const req: any = {\n      channel: channel\n    };\n    if (options !== undefined) {\n      if (options.since) {\n        req.since = {\n          offset: options.since.offset\n        };\n        if (options.since.epoch) {\n          req.since.epoch = options.since.epoch;\n        }\n      }\n      if (options.limit !== undefined) {\n        req.limit = options.limit;\n      }\n      if (options.reverse === true) {\n        req.reverse = true;\n      }\n    }\n    return req;\n  }\n\n  private _methodCall(): any {\n    if (this._isConnected()) {\n      return Promise.resolve();\n    }\n    return new Promise((res, rej) => {\n      const timeout = setTimeout(function () {\n        rej({ code: errorCodes.timeout, message: 'timeout' });\n      }, this._config.timeout);\n      this._promises[this._nextPromiseId()] = {\n        timeout: timeout,\n        resolve: res,\n        reject: rej\n      };\n    });\n  }\n\n  private _callPromise(cmd: any, resultCB: any): any {\n    return new Promise((resolve, reject) => {\n      this._call(cmd, false).then(resolveCtx => {\n        // @ts-ignore - improve later.\n        resolve(resultCB(resolveCtx.reply));\n        // @ts-ignore - improve later.\n        if (resolveCtx.next) {\n          // @ts-ignore - improve later.\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        reject(rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    });\n  }\n\n  private _dataReceived(data) {\n    if (this._serverPing > 0) {\n      this._waitServerPing();\n    }\n    const replies = this._decoder.decodeReplies(data);\n    // We have to guarantee order of events in replies processing - i.e. start processing\n    // next reply only when we finished processing of current one. Without syncing things in\n    // this way we could get wrong publication events order as reply promises resolve\n    // on next loop tick so for loop continues before we finished emitting all reply events.\n    this._dispatchPromise = this._dispatchPromise.then(() => {\n      let finishDispatch;\n      this._dispatchPromise = new Promise(resolve => {\n        finishDispatch = resolve;\n      });\n      this._dispatchSynchronized(replies, finishDispatch);\n    });\n  }\n\n  private _dispatchSynchronized(replies: any[], finishDispatch: any) {\n    let p: Promise<unknown> = Promise.resolve();\n    for (const i in replies) {\n      if (replies.hasOwnProperty(i)) {\n        p = p.then(() => {\n          return this._dispatchReply(replies[i]);\n        });\n      }\n    }\n    p = p.then(() => {\n      finishDispatch();\n    });\n  }\n\n  private _dispatchReply(reply: any) {\n    let next: any;\n    const p = new Promise(resolve => {\n      next = resolve;\n    });\n\n    if (reply === undefined || reply === null) {\n      this._debug('dispatch: got undefined or null reply');\n      next();\n      return p;\n    }\n\n    const id = reply.id;\n\n    if (id && id > 0) {\n      this._handleReply(reply, next);\n    } else {\n      if (!reply.push) {\n        this._handleServerPing(next);\n      } else {\n        this._handlePush(reply.push, next);\n      }\n    }\n\n    return p;\n  }\n\n  private _call(cmd: any, skipSending: boolean) {\n    return new Promise((resolve, reject) => {\n      cmd.id = this._nextCommandId();\n      this._registerCall(cmd.id, resolve, reject);\n      if (!skipSending) {\n        this._addCommand(cmd);\n      }\n    });\n  }\n\n  private _startConnecting() {\n    this._debug('start connecting');\n    if (this._setState(State.Connecting)) {\n      this.emit('connecting', { code: connectingCodes.connectCalled, reason: 'connect called' });\n    }\n    this._client = null;\n    this._startReconnecting();\n  }\n\n  private _disconnect(code: number, reason: string, reconnect: boolean) {\n    if (this._isDisconnected()) {\n      return;\n    }\n\n    const previousState = this.state;\n\n    const ctx = {\n      code: code,\n      reason: reason\n    };\n\n    let needEvent = false;\n\n    if (reconnect) {\n      needEvent = this._setState(State.Connecting);\n    } else {\n      needEvent = this._setState(State.Disconnected);\n      this._rejectPromises({ code: errorCodes.clientDisconnected, message: 'disconnected' });\n    }\n\n    this._clearOutgoingRequests();\n\n    if (previousState === State.Connecting) {\n      this._clearReconnectTimeout();\n    }\n    if (previousState === State.Connected) {\n      this._clearConnectedState();\n    }\n\n    if (needEvent) {\n      if (this._isConnecting()) {\n        this.emit('connecting', ctx);\n      } else {\n        this.emit('disconnected', ctx);\n      }\n    }\n\n    if (this._transport) {\n      const transport = this._transport;\n      this._transport = null;\n      transport.close(); // Close only after setting this._transport to null to avoid recursion when calling transport close().\n    }\n  }\n\n  private _failUnauthorized() {\n    this._disconnect(disconnectedCodes.unauthorized, 'unauthorized', false);\n  }\n\n  private _getToken() {\n    this._debug('get connection token');\n    if (!this._config.getToken) {\n      throw new Error('provide a function to get connection token');\n    }\n    return this._config.getToken({});\n  }\n\n  private _refresh() {\n    const clientId = this._client;\n    const self = this;\n    this._getToken().then(function (token) {\n      if (clientId !== self._client) {\n        return;\n      }\n      if (!token) {\n        self._failUnauthorized();\n        return;\n      }\n      self._token = token;\n      self._debug('connection token refreshed');\n\n      if (!self._isConnected()) {\n        return;\n      }\n\n      const cmd = {\n        refresh: { token: self._token }\n      };\n\n      self._call(cmd, false).then(resolveCtx => {\n        // @ts-ignore - improve later.\n        const result = resolveCtx.reply.refresh;\n        self._refreshResponse(result);\n        // @ts-ignore - improve later.\n        if (resolveCtx.next) {\n          // @ts-ignore - improve later.\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        self._refreshError(rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    }).catch(function (e) {\n      self.emit('error', {\n        type: 'refreshToken',\n        error: {\n          code: errorCodes.clientRefreshToken,\n          message: e !== undefined ? e.toString() : ''\n        }\n      });\n      self._refreshTimeout = setTimeout(() => self._refresh(), self._getRefreshRetryDelay());\n    });\n  }\n\n  private _refreshError(err: any) {\n    if (err.code < 100 || err.temporary === true) {\n      this.emit('error', {\n        type: 'refresh',\n        error: err\n      });\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getRefreshRetryDelay());\n    } else {\n      this._disconnect(err.code, err.message, false);\n    }\n  }\n\n  private _getRefreshRetryDelay() {\n    return backoff(0, 5000, 10000);\n  }\n\n  private _refreshResponse(result: any) {\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (result.expires) {\n      this._client = result.client;\n      this._refreshTimeout = setTimeout(() => this._refresh(), ttlMilliseconds(result.ttl));\n    }\n  }\n\n  private _removeSubscription(sub: Subscription | null) {\n    if (sub === null) {\n      return;\n    }\n    delete this._subs[sub.channel];\n  }\n\n  protected _unsubscribe(sub: Subscription) {\n    if (!this._isConnected()) {\n      return;\n    }\n    const req = {\n      channel: sub.channel\n    };\n    const cmd = { unsubscribe: req };\n\n    const self = this;\n\n    this._call(cmd, false).then(resolveCtx => {\n      // @ts-ignore - improve later.\n      if (resolveCtx.next) {\n        // @ts-ignore - improve later.\n        resolveCtx.next();\n      }\n    }, rejectCtx => {\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n      self._disconnect(connectingCodes.unsubscribeError, 'unsubscribe error', true);\n    });\n  }\n\n  private _getSub(channel: string) {\n    const sub = this._subs[channel];\n    if (!sub) {\n      return null;\n    }\n    return sub;\n  }\n\n  private _isServerSub(channel: string) {\n    return this._serverSubs[channel] !== undefined;\n  }\n\n  private _sendSubscribeCommands(optimistic: boolean, skipSending: boolean): any[] {\n    const commands: any[] = [];\n    for (const channel in this._subs) {\n      if (!this._subs.hasOwnProperty(channel)) {\n        continue;\n      }\n      const sub = this._subs[channel];\n      // @ts-ignore \u2013 we are hiding some symbols from public API autocompletion.\n      if (sub._inflight === true) {\n        continue;\n      }\n      if (sub.state === SubscriptionState.Subscribing) {\n        // @ts-ignore \u2013 we are hiding some symbols from public API autocompletion.\n        const cmd = sub._subscribe(optimistic, skipSending);\n        if (cmd) {\n          commands.push(cmd);\n        }\n      }\n    }\n    return commands;\n  }\n\n  private _connectResponse(result: any) {\n    this._transportWasOpen = true;\n    this._reconnectAttempts = 0;\n    this._refreshRequired = false;\n\n    if (this._isConnected()) {\n      return;\n    }\n\n    this._client = result.client;\n    this._setState(State.Connected);\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n    }\n    if (result.expires) {\n      this._refreshTimeout = setTimeout(() => this._refresh(), ttlMilliseconds(result.ttl));\n    }\n\n    this._session = result.session;\n    this._node = result.node;\n\n    this.startBatching();\n    this._sendSubscribeCommands(false, false);\n    this.stopBatching();\n\n    const ctx: any = {\n      client: result.client,\n      transport: this._transport.subName()\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n\n    this.emit('connected', ctx);\n\n    this._resolvePromises();\n\n    this._processServerSubs(result.subs || {});\n\n    if (result.ping && result.ping > 0) {\n      this._serverPing = result.ping * 1000;\n      this._sendPong = result.pong === true;\n      this._waitServerPing();\n    } else {\n      this._serverPing = 0;\n    }\n  }\n\n  private _processServerSubs(subs: Record<string, any>) {\n    for (const channel in subs) {\n      if (!subs.hasOwnProperty(channel)) {\n        continue;\n      }\n      const sub = subs[channel];\n      this._serverSubs[channel] = {\n        'offset': sub.offset,\n        'epoch': sub.epoch,\n        'recoverable': sub.recoverable || false\n      };\n      const subCtx = this._getSubscribeContext(channel, sub);\n      this.emit('subscribed', subCtx);\n    }\n\n    for (const channel in subs) {\n      if (!subs.hasOwnProperty(channel)) {\n        continue;\n      }\n      const sub = subs[channel];\n      if (sub.recovered) {\n        const pubs = sub.publications;\n        if (pubs && pubs.length > 0) {\n          for (const i in pubs) {\n            if (pubs.hasOwnProperty(i)) {\n              this._handlePublication(channel, pubs[i]);\n            }\n          }\n        }\n      }\n    }\n\n    for (const channel in this._serverSubs) {\n      if (!this._serverSubs.hasOwnProperty(channel)) {\n        continue;\n      }\n      if (!subs[channel]) {\n        this.emit('unsubscribed', { channel: channel });\n        delete this._serverSubs[channel];\n      }\n    }\n  }\n\n  private _clearRefreshTimeout() {\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n  }\n\n  private _clearReconnectTimeout() {\n    if (this._reconnectTimeout !== null) {\n      clearTimeout(this._reconnectTimeout);\n      this._reconnectTimeout = null;\n    }\n  }\n\n  private _clearServerPingTimeout() {\n    if (this._serverPingTimeout !== null) {\n      clearTimeout(this._serverPingTimeout);\n      this._serverPingTimeout = null;\n    }\n  }\n\n  private _waitServerPing() {\n    if (this._config.maxServerPingDelay === 0) {\n      return;\n    }\n    if (!this._isConnected()) {\n      return;\n    }\n    this._clearServerPingTimeout();\n    this._serverPingTimeout = setTimeout(() => {\n      if (!this._isConnected()) {\n        return;\n      }\n      this._disconnect(connectingCodes.noPing, 'no ping', true);\n    }, this._serverPing + this._config.maxServerPingDelay);\n  }\n\n  private _getSubscribeContext(channel: string, result: any): SubscribedContext {\n    const ctx: any = {\n      channel: channel,\n      positioned: false,\n      recoverable: false,\n      wasRecovering: false,\n      recovered: false\n    };\n    if (result.recovered) {\n      ctx.recovered = true;\n    }\n    if (result.positioned) {\n      ctx.positioned = true;\n    }\n    if (result.recoverable) {\n      ctx.recoverable = true;\n    }\n    if (result.was_recovering) {\n      ctx.wasRecovering = true;\n    }\n    let epoch = '';\n    if ('epoch' in result) {\n      epoch = result.epoch;\n    }\n    let offset = 0;\n    if ('offset' in result) {\n      offset = result.offset;\n    }\n    if (ctx.positioned || ctx.recoverable) {\n      ctx.streamPosition = {\n        'offset': offset,\n        'epoch': epoch\n      };\n    }\n    if (result.data) {\n      ctx.data = result.data;\n    }\n    return ctx;\n  }\n\n  private _handleReply(reply: any, next: any) {\n    const id = reply.id;\n    if (!(id in this._callbacks)) {\n      next();\n      return;\n    }\n    const callbacks = this._callbacks[id];\n    clearTimeout(this._callbacks[id].timeout);\n    delete this._callbacks[id];\n\n    if (!errorExists(reply)) {\n      const callback = callbacks.callback;\n      if (!callback) {\n        return;\n      }\n      callback({ reply, next });\n    } else {\n      const errback = callbacks.errback;\n      if (!errback) {\n        next();\n        return;\n      }\n      const error = reply.error;\n      errback({ error, next });\n    }\n  }\n\n  private _handleJoin(channel: string, join: any) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        const ctx = { channel: channel, info: this._getJoinLeaveContext(join.info) };\n        this.emit('join', ctx);\n      }\n      return;\n    }\n    // @ts-ignore \u2013 we are hiding some symbols from public API autocompletion.\n    sub._handleJoin(join);\n  }\n\n  private _handleLeave(channel: string, leave: any) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        const ctx = { channel: channel, info: this._getJoinLeaveContext(leave.info) };\n        this.emit('leave', ctx);\n      }\n      return;\n    }\n    // @ts-ignore \u2013 we are hiding some symbols from public API autocompletion.\n    sub._handleLeave(leave);\n  }\n\n  private _handleUnsubscribe(channel: string, unsubscribe: any) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        delete this._serverSubs[channel];\n        this.emit('unsubscribed', { channel: channel });\n      }\n      return;\n    }\n    if (unsubscribe.code < 2500) {\n      // @ts-ignore \u2013 we are hiding some symbols from public API autocompletion.\n      sub._setUnsubscribed(unsubscribe.code, unsubscribe.reason, false);\n    } else {\n      // @ts-ignore \u2013 we are hiding some symbols from public API autocompletion.\n      sub._setSubscribing(unsubscribe.code, unsubscribe.reason);\n    }\n  }\n\n  private _handleSubscribe(channel: string, sub: any) {\n    this._serverSubs[channel] = {\n      'offset': sub.offset,\n      'epoch': sub.epoch,\n      'recoverable': sub.recoverable || false\n    };\n    this.emit('subscribed', this._getSubscribeContext(channel, sub));\n  }\n\n  private _handleDisconnect(disconnect: any) {\n    const code = disconnect.code;\n    let reconnect = true;\n    if ((code >= 3500 && code < 4000) || (code >= 4500 && code < 5000)) {\n      reconnect = false;\n    }\n    this._disconnect(code, disconnect.reason, reconnect);\n  }\n\n  private _getPublicationContext(channel: string, pub: any) {\n    const ctx: any = {\n      channel: channel,\n      data: pub.data\n    };\n    if (pub.offset) {\n      ctx.offset = pub.offset;\n    }\n    if (pub.info) {\n      ctx.info = this._getJoinLeaveContext(pub.info);\n    }\n    if (pub.tags) {\n      ctx.tags = pub.tags;\n    }\n    return ctx;\n  }\n\n  private _getJoinLeaveContext(clientInfo: any) {\n    const info: any = {\n      client: clientInfo.client,\n      user: clientInfo.user\n    };\n    if (clientInfo.conn_info) {\n      info.connInfo = clientInfo.conn_info;\n    }\n    if (clientInfo.chan_info) {\n      info.chanInfo = clientInfo.chan_info;\n    }\n    return info;\n  }\n\n  private _handlePublication(channel: string, pub: any) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        const ctx = this._getPublicationContext(channel, pub);\n        this.emit('publication', ctx);\n        if (pub.offset !== undefined) {\n          this._serverSubs[channel].offset = pub.offset;\n        }\n      }\n      return;\n    }\n    // @ts-ignore \u2013 we are hiding some symbols from public API autocompletion.\n    sub._handlePublication(pub);\n  }\n\n  private _handleMessage(message: any) {\n    this.emit('message', { data: message.data });\n  }\n\n  private _handleServerPing(next: any) {\n    if (this._sendPong) {\n      const cmd = {};\n      this._transportSendCommands([cmd]);\n    }\n    next();\n  }\n\n  private _handlePush(data: any, next: any) {\n    const channel = data.channel;\n    if (data.pub) {\n      this._handlePublication(channel, data.pub);\n    } else if (data.message) {\n      this._handleMessage(data.message);\n    } else if (data.join) {\n      this._handleJoin(channel, data.join);\n    } else if (data.leave) {\n      this._handleLeave(channel, data.leave);\n    } else if (data.unsubscribe) {\n      this._handleUnsubscribe(channel, data.unsubscribe);\n    } else if (data.subscribe) {\n      this._handleSubscribe(channel, data.subscribe);\n    } else if (data.disconnect) {\n      this._handleDisconnect(data.disconnect);\n    }\n    next();\n  }\n\n  private _flush() {\n    const commands = this._commands.slice(0);\n    this._commands = [];\n    this._transportSendCommands(commands);\n  }\n\n  private _createErrorObject(code: number, message: string, temporary?: boolean) {\n    const errObject: any = {\n      code: code,\n      message: message\n    };\n    if (temporary) {\n      errObject.temporary = true;\n    }\n    return errObject;\n  }\n\n  private _registerCall(id: number, callback: any, errback: any) {\n    this._callbacks[id] = {\n      callback: callback,\n      errback: errback,\n      timeout: null\n    };\n    this._callbacks[id].timeout = setTimeout(() => {\n      delete this._callbacks[id];\n      if (isFunction(errback)) {\n        errback({ error: this._createErrorObject(errorCodes.timeout, 'timeout') });\n      }\n    }, this._config.timeout);\n  }\n\n  private _addCommand(command: any) {\n    if (this._batching) {\n      this._commands.push(command);\n    } else {\n      this._transportSendCommands([command]);\n    }\n  }\n\n  private _nextPromiseId() {\n    return ++this._promiseId;\n  }\n\n  private _resolvePromises() {\n    for (const id in this._promises) {\n      if (this._promises[id].timeout) {\n        clearTimeout(this._promises[id].timeout);\n      }\n      this._promises[id].resolve();\n      delete this._promises[id];\n    }\n  }\n\n  private _rejectPromises(err: any) {\n    for (const id in this._promises) {\n      if (this._promises[id].timeout) {\n        clearTimeout(this._promises[id].timeout);\n      }\n      this._promises[id].reject(err);\n      delete this._promises[id];\n    }\n  }\n}\n\nCentrifuge.SubscriptionState = SubscriptionState;\nCentrifuge.State = State\n", "import { Centrifuge } from '../centrifuge';\n\nconst protobuf = require('protobufjs/light');\nconst proto = protobuf.Root.fromJSON(require('./client.proto.json'));\n\nconst Command = proto.lookupType('protocol.Command');\nconst Reply = proto.lookupType('protocol.Reply');\nconst EmulationRequest = proto.lookupType('protocol.EmulationRequest');\n\nexport class ProtobufEncoder {\n  encodeEmulationRequest(req: any) {\n    const writer = protobuf.Writer.create();\n    EmulationRequest.encode(req, writer);\n    return writer.finish();\n  }\n\n  encodeCommands(commands: any[]) {\n    const writer = protobuf.Writer.create();\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        const command = Object.assign({}, commands[i]);\n        Command.encodeDelimited(command, writer);\n      }\n    }\n    return writer.finish();\n  }\n}\n\nexport class ProtobufDecoder {\n  decodeReplies(data: any) {\n    const replies: any[] = [];\n    const reader = protobuf.Reader.create(new Uint8Array(data));\n    while (reader.pos < reader.len) {\n      const reply = Reply.decodeDelimited(reader);\n      replies.push(reply);\n    }\n    return replies;\n  }\n\n  decodeReply(data: any) {\n    const reader = protobuf.Reader.create(new Uint8Array(data));\n    while (reader.pos < reader.len) {\n      Reply.decodeDelimited(reader);\n      return {\n        ok: true,\n        pos: reader.pos\n      };\n    }\n    return {\n      ok: false\n    };\n  }\n}\n\nexport default class CentrifugeProtobuf extends Centrifuge {\n  protected _formatOverride(format: 'json' | 'protobuf') {\n    if (format === 'protobuf') {\n      this._encoder = new ProtobufEncoder();\n      this._decoder = new ProtobufDecoder();\n      return true;\n    }\n    return false;\n  }\n}\n", "/**\n * This file is the entrypoint of browser builds.\n * The code executes when loaded in a browser.\n */\nimport CentrifugeProtobuf from '.';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(window as any).Centrifuge = CentrifugeProtobuf\n"],
  "mappings": "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",
  "names": ["require_events", "__commonJSMin", "exports", "module", "R", "ReflectApply", "target", "receiver", "args", "ReflectOwnKeys", "ProcessEmitWarning", "warning", "NumberIsNaN", "value", "EventEmitter", "once", "defaultMaxListeners", "checkListener", "listener", "arg", "n", "_getMaxListeners", "that", "type", "i", "doError", "events", "er", "err", "handler", "len", "listeners", "arrayClone", "_addListener", "prepend", "m", "existing", "w", "onceWrapper", "_onceWrap", "state", "wrapped", "list", "position", "originalListener", "spliceOne", "keys", "key", "_listeners", "unwrap", "evlistener", "unwrapListeners", "emitter", "listenerCount", "arr", "copy", "index", "ret", "name", "resolve", "reject", "errorListener", "resolver", "eventTargetAgnosticAddListener", "addErrorHandlerIfEventEmitter", "flags", "wrapListener", "require_aspromise", "__commonJSMin", "exports", "module", "asPromise", "fn", "ctx", "params", "offset", "index", "pending", "resolve", "reject", "err", "require_base64", "__commonJSMin", "exports", "base64", "string", "p", "n", "b64", "s64", "i", "buffer", "start", "end", "parts", "chunk", "j", "t", "b", "invalidEncoding", "offset", "c", "require_eventemitter", "__commonJSMin", "exports", "module", "EventEmitter", "evt", "fn", "ctx", "listeners", "args", "require_float", "__commonJSMin", "exports", "module", "factory", "f32", "f8b", "le", "writeFloat_f32_cpy", "val", "buf", "pos", "writeFloat_f32_rev", "readFloat_f32_cpy", "readFloat_f32_rev", "writeFloat_ieee754", "writeUint", "sign", "exponent", "mantissa", "writeUintLE", "writeUintBE", "readFloat_ieee754", "readUint", "uint", "readUintLE", "readUintBE", "f64", "writeDouble_f64_cpy", "writeDouble_f64_rev", "readDouble_f64_cpy", "readDouble_f64_rev", "writeDouble_ieee754", "off0", "off1", "readDouble_ieee754", "lo", "hi", "require_inquire", "__commonJSMin", "e", "require_utf8", "__commonJSMin", "exports", "utf8", "string", "len", "c", "buffer", "start", "end", "parts", "chunk", "i", "t", "offset", "c1", "c2", "require_pool", "__commonJSMin", "exports", "module", "pool", "alloc", "slice", "size", "SIZE", "MAX", "slab", "offset", "buf", "require_longbits", "__commonJSMin", "exports", "module", "LongBits", "util", "lo", "hi", "zero", "zeroHash", "value", "sign", "unsigned", "charCodeAt", "hash", "mask", "part0", "part1", "part2", "require_minimal", "__commonJSMin", "exports", "util", "value", "obj", "prop", "Buffer", "sizeOrArray", "hash", "unsigned", "bits", "merge", "dst", "src", "ifNotSet", "keys", "str", "newError", "name", "CustomError", "message", "properties", "fieldNames", "fieldMap", "i", "encoding", "size", "require_writer", "__commonJSMin", "exports", "module", "Writer", "util", "BufferWriter", "LongBits", "base64", "utf8", "Op", "fn", "len", "val", "noop", "State", "writer", "create", "size", "writeByte", "buf", "pos", "writeVarint32", "VarintOp", "value", "writeVarint64", "bits", "writeFixed32", "writeBytes", "head", "tail", "BufferWriter_", "require_writer_buffer", "__commonJSMin", "exports", "module", "BufferWriter", "Writer", "util", "val", "buf", "pos", "value", "len", "writeStringBuffer", "require_reader", "__commonJSMin", "exports", "module", "Reader", "util", "BufferReader", "LongBits", "utf8", "indexOutOfRange", "reader", "writeLength", "buffer", "create_array", "create", "value", "readLongVarint", "bits", "i", "readFixed32_end", "buf", "end", "readFixed64", "length", "start", "bytes", "wireType", "BufferReader_", "fn", "require_reader_buffer", "__commonJSMin", "exports", "module", "BufferReader", "Reader", "util", "buffer", "len", "require_service", "__commonJSMin", "exports", "module", "Service", "util", "rpcImpl", "requestDelimited", "responseDelimited", "rpcCall", "method", "requestCtor", "responseCtor", "request", "callback", "self", "err", "response", "endedByRPC", "require_rpc", "__commonJSMin", "exports", "rpc", "require_roots", "__commonJSMin", "exports", "module", "require_index_minimal", "__commonJSMin", "exports", "protobuf", "configure", "require_codegen", "__commonJSMin", "exports", "module", "codegen", "functionParams", "functionName", "body", "Codegen", "formatStringOrScope", "source", "toString", "scopeKeys", "scopeParams", "scopeValues", "scopeOffset", "formatParams", "formatOffset", "$0", "$1", "value", "functionNameOverride", "require_fetch", "__commonJSMin", "exports", "module", "fetch", "asPromise", "inquire", "fs", "filename", "options", "callback", "err", "contents", "xhr", "buffer", "i", "require_path", "__commonJSMin", "exports", "path", "isAbsolute", "normalize", "parts", "absolute", "prefix", "i", "originPath", "includePath", "alreadyNormalized", "require_types", "__commonJSMin", "exports", "types", "util", "s", "bake", "values", "offset", "i", "o", "require_field", "__commonJSMin", "exports", "module", "Field", "ReflectionObject", "Enum", "types", "util", "Type", "ruleRe", "name", "json", "id", "type", "rule", "extend", "options", "comment", "value", "ifNotSet", "toJSONOptions", "keepComments", "buf", "fieldId", "fieldType", "fieldRule", "defaultValue", "prototype", "fieldName", "Type_", "require_oneof", "__commonJSMin", "exports", "module", "OneOf", "ReflectionObject", "Field", "util", "name", "fieldNames", "options", "comment", "json", "toJSONOptions", "keepComments", "addFieldsToParent", "oneof", "i", "field", "index", "parent", "self", "prototype", "oneofName", "require_namespace", "__commonJSMin", "exports", "module", "Namespace", "ReflectionObject", "Field", "OneOf", "util", "Type", "Service", "Enum", "name", "json", "arrayToJSON", "array", "toJSONOptions", "obj", "i", "reserved", "id", "options", "clearCache", "namespace", "nestedJson", "ns", "names", "nested", "object", "prev", "path", "ptr", "part", "filterTypes", "parentAlreadyChecked", "found", "Type_", "Service_", "Enum_", "require_mapfield", "__commonJSMin", "exports", "module", "MapField", "Field", "types", "util", "name", "id", "keyType", "type", "options", "comment", "json", "toJSONOptions", "keepComments", "fieldId", "fieldKeyType", "fieldValueType", "prototype", "fieldName", "require_method", "__commonJSMin", "exports", "module", "Method", "ReflectionObject", "util", "name", "type", "requestType", "responseType", "requestStream", "responseStream", "options", "comment", "parsedOptions", "json", "toJSONOptions", "keepComments", "require_service", "__commonJSMin", "exports", "module", "Service", "Namespace", "Method", "util", "rpc", "name", "options", "json", "service", "names", "i", "toJSONOptions", "inherited", "keepComments", "clearCache", "methods", "object", "rpcImpl", "requestDelimited", "responseDelimited", "rpcService", "method", "methodName", "require_message", "__commonJSMin", "exports", "module", "Message", "util", "properties", "keys", "i", "message", "writer", "reader", "object", "options", "require_decoder", "__commonJSMin", "exports", "module", "decoder", "Enum", "types", "util", "missing", "field", "mtype", "gen", "i", "type", "ref", "rfield", "require_verifier", "__commonJSMin", "exports", "module", "verifier", "Enum", "util", "invalid", "field", "expected", "genVerifyValue", "gen", "fieldIndex", "ref", "keys", "j", "genVerifyKey", "mtype", "oneofs", "seenFirstField", "oneofProp", "require_converter", "__commonJSMin", "exports", "converter", "Enum", "util", "genValuePartial_fromObject", "gen", "field", "fieldIndex", "prop", "values", "keys", "i", "isUnsigned", "mtype", "fields", "genValuePartial_toObject", "repeatedFields", "mapFields", "normalFields", "arrayDefault", "hasKs2", "index", "require_wrappers", "__commonJSMin", "exports", "wrappers", "Message", "object", "name", "type", "type_url", "message", "options", "googleApi", "prefix", "messageName", "require_type", "__commonJSMin", "exports", "module", "Type", "Namespace", "Enum", "OneOf", "Field", "MapField", "Service", "Message", "Reader", "Writer", "util", "encoder", "decoder", "verifier", "converter", "wrappers", "name", "options", "names", "i", "field", "id", "ctor", "prototype", "ctorProperties", "mtype", "gen", "clearCache", "type", "json", "nested", "toJSONOptions", "inherited", "keepComments", "obj", "fields", "oneofs", "object", "properties", "fullName", "types", "wrapper", "originalThis", "message", "writer", "reader", "length", "typeName", "target", "require_root", "__commonJSMin", "exports", "module", "Root", "Namespace", "Field", "Enum", "OneOf", "util", "Type", "parse", "common", "options", "json", "root", "SYNC", "load", "filename", "callback", "self", "sync", "finish", "err", "cb", "getBundledFileName", "idx", "altname", "process", "source", "parsed", "resolved", "i", "fetch", "queued", "weak", "field", "exposeRe", "tryHandleExtension", "extendedType", "sisterField", "object", "j", "index", "Type_", "parse_", "common_", "require_util", "__commonJSMin", "exports", "module", "util", "roots", "Type", "Enum", "object", "keys", "array", "index", "key", "val", "safePropBackslashRe", "safePropQuoteRe", "name", "prop", "str", "camelCaseRe", "$0", "$1", "a", "b", "ctor", "typeName", "type", "decorateEnumIndex", "enm", "dst", "path", "value", "setProp", "part", "prevValue", "require_object", "__commonJSMin", "exports", "module", "ReflectionObject", "util", "Root", "name", "options", "ptr", "path", "parent", "root", "value", "ifNotSet", "propName", "parsedOptions", "opt", "newValue", "newOpt", "keys", "className", "fullName", "Root_", "require_enum", "__commonJSMin", "exports", "module", "Enum", "ReflectionObject", "Namespace", "util", "name", "values", "options", "comment", "comments", "keys", "i", "json", "enm", "toJSONOptions", "keepComments", "id", "val", "require_encoder", "__commonJSMin", "exports", "module", "encoder", "Enum", "types", "util", "genTypePartial", "gen", "field", "fieldIndex", "ref", "mtype", "i", "fields", "index", "type", "wireType", "require_index_light", "__commonJSMin", "exports", "module", "protobuf", "load", "filename", "root", "callback", "loadSync", "require_light", "__commonJSMin", "exports", "module", "import_events", "errorCodes", "connectingCodes", "disconnectedCodes", "subscribingCodes", "unsubscribedCodes", "State", "SubscriptionState", "startsWith", "value", "prefix", "isFunction", "log", "level", "args", "logger", "randomInt", "min", "max", "backoff", "step", "interval", "errorExists", "data", "ttlMilliseconds", "ttl", "Subscription", "EventEmitter", "centrifuge", "channel", "options", "ctx", "timeout", "errorCodes", "res", "rej", "subscribingCodes", "unsubscribedCodes", "data", "self", "opts", "newState", "oldState", "result", "pubs", "i", "ttlMilliseconds", "code", "reason", "optimistic", "skipSending", "token", "e", "req", "offset", "epoch", "cmd", "resolveCtx", "rejectCtx", "error", "connectingCodes", "sendUnsubscribe", "pub", "join", "info", "leave", "id", "err", "delay", "errContext", "backoff", "getToken", "msg", "SockjsTransport", "endpoint", "options", "_protocol", "callbacks", "e", "closeEvent", "event", "data", "WebsocketTransport", "endpoint", "options", "protocol", "callbacks", "subProtocol", "e", "closeEvent", "event", "data", "HttpStreamTransport", "endpoint", "options", "response", "self", "eventTarget", "fetchFunc", "jsonStreamBuf", "jsonStreamPos", "protoStreamBuf", "reader", "controller", "pump", "done", "value", "line", "mergedArray", "result", "data", "error", "e", "protocol", "callbacks", "initialData", "headers", "body", "fetchOptions", "session", "node", "req", "SseTransport", "endpoint", "options", "_protocol", "callbacks", "initialData", "url", "eventsourceOptions", "eventSource", "self", "e", "data", "session", "node", "req", "headers", "body", "fetchFunc", "fetchOptions", "WebtransportTransport", "endpoint", "options", "protocol", "callbacks", "__async", "url", "eventTarget", "e", "stream", "reader", "jsonStreamBuf", "jsonStreamPos", "protoStreamBuf", "done", "value", "line", "mergedArray", "result", "data", "binary", "JsonEncoder", "commands", "c", "JsonDecoder", "data", "r", "import_events", "defaults", "Centrifuge", "EventEmitter", "endpoint", "options", "__spreadValues", "ctx", "channel", "sub", "Subscription", "timeout", "errorCodes", "res", "rej", "disconnectedCodes", "data", "cmd", "self", "method", "reply", "result", "publications", "i", "clients", "clientId", "connInfo", "chanInfo", "args", "log", "format", "JsonEncoder", "JsonDecoder", "_format", "transportConfig", "transportName", "newState", "oldState", "eventTarget", "connectingCodes", "delay", "backoff", "id", "callbacks", "errback", "subscribingCodes", "commands", "command", "e", "websocket", "sockjs", "eventsource", "fetchFunc", "readableStream", "count", "transportEndpoint", "WebsocketTransport", "WebtransportTransport", "HttpStreamTransport", "SseTransport", "SockjsTransport", "startsWith", "transport", "wasOpen", "optimistic", "initialCommands", "connectCommand", "subscribeCommands", "initialData", "closeEvent", "reason", "needReconnect", "code", "advice", "isInitialHandshake", "skipSending", "resolveCtx", "rejectCtx", "token", "err", "req", "subs", "hasSubs", "resultCB", "resolve", "reject", "replies", "finishDispatch", "p", "next", "reconnect", "previousState", "needEvent", "ttlMilliseconds", "subCtx", "pubs", "epoch", "offset", "errorExists", "error", "callback", "join", "leave", "unsubscribe", "disconnect", "pub", "clientInfo", "info", "message", "temporary", "errObject", "isFunction", "SubscriptionState", "State", "protobuf", "proto", "Command", "Reply", "EmulationRequest", "ProtobufEncoder", "req", "writer", "commands", "i", "command", "ProtobufDecoder", "data", "replies", "reader", "reply", "CentrifugeProtobuf", "Centrifuge", "format", "CentrifugeProtobuf"]
}
